@using System.Globalization
@using Newtonsoft.Json;
@using System.Text.RegularExpressions
@using Cms.Controllers
@model Cms.Models.MultipleIndexModel

@{
    var category = "";
    var id = "";
    bool isVariable = false;
    HelperController helper = new HelperController();
    var thisUrl = Request.Url.ToString();

}
<style>
    #front-picture, #services {
        display: none !important;
    }
</style>

@if (Request.Params["sent"] == "true")
{
    <div class="alert alert-success" role="alert">
        Vaša žiadosť bola odoslaná.
    </div>
}

<section id="product">
    <div class="container-fluid w-75">

        @if (ViewBag.Detaily != null)
        {

            foreach (var prod in (IEnumerable<Cms.Models.products>)ViewBag.Detaily)
            {
                var desc = Html.Raw(prod.description).ToString();
                ViewBag.Title = prod.title + " -";
                ViewBag.Image = "https://shop.nahod.sk/Uploads/" + prod.image;
                ViewBag.Description = desc;
                category = prod.category;
                id = prod.id.ToString();
                <script>
				var id = @id;
                </script>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item" style="text-decoration: underline"><a href="\">Domov</a></li>
                        @if (prod.category != null)
                        {

                            dynamic cats = JsonConvert.DeserializeObject(prod.category);

                            foreach (var cat in Model.CategoriesModel.Where(i => i.id == cats[0].Value))
                            {
                                foreach (var topcat in Model.CategoriesModel.Where(o => o.name == cat.name))
                                {
                                    var categoryname = "";
                                    if (topcat.maincat == "Žiadna")
                                    { categoryname = topcat.name; }
                                    else
                                    {
                                        categoryname = topcat.maincat;
                                    }

                                    <li class="breadcrumb-item" style="text-decoration: underline"><a href="@Url.Action("Category", "Home", new { catslug = @Html.Raw(topcat.slug) })">@categoryname</a></li>
                                    if (topcat.maincat != "Žiadna")
                                    {
                                        foreach (var subcat in Model.CategoriesModel.Where(o => o.name == cat.name && o.maincat == cat.maincat))
                                        {
                                            <li class="breadcrumb-item" style="text-decoration: underline"><a href="@Url.Action("Category", "Home", new { catslug = @Html.Raw(topcat.slug), subslug = @Html.Raw(subcat.slug) })">@subcat.name</a></li>

                                            @*<li class="breadcrumb-item" style="text-decoration: underline"><a href="@Url.Action("Category", "Home", new { catslug = @Html.Raw(topcat.slug), subslug = @Html.Raw(subcat.slug), subslug2 = @Html.Raw(cat.slug) })">@cat.name</a></li>*@
                                        }
                                    }
                                }
                            }
                        }
                        <li class="breadcrumb-item active" aria-current="page">@prod.title</li>
                    </ol>
                </nav>

                <div class="row product-detail">
                    <div class="col-12 col-md-6">

                        <div class="show-mobile">
                            <h2 class="pb-2">@prod.title</h2><br />
                        </div>

                        <a href="~/Uploads/@prod.image" data-toggle="lightbox" data-gallery="example-gallery">
                            <img src="~/Uploads/@prod.image" alt="@prod.title" style="width: 90%;" class="galleryimg" />
                        </a>
                        @if (Directory.Exists(Server.MapPath("~/Uploads/" + prod.gallery)))
                        {
                            foreach (var imgPath in Directory.GetFiles(Server.MapPath("~/Uploads/" + prod.gallery)))
                            {
                                var img = new FileInfo(imgPath);
                                <a href="@Url.Content(String.Format("~/Uploads/" + prod.gallery + "{0}", img.Name))" data-toggle="lightbox" data-gallery="example-gallery" style="padding:5px 1px 0 0;display: inline-block;width:22%;">
                                    <img style="width:100%; height:120px;float:left;object-fit: cover;" src="@Url.Content(String.Format("~/Uploads/" + prod.gallery + "{0}", img.Name))" class="img-fluid galleryimg-small" />
                                </a>
                            }
                        }

                        <br>
                        <br>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="hide-mobile">
                            <h2 class="pb-2 hide-mobile">@prod.title</h2>
                        </div>

                        <hr />
                        <p style="font-size: 16px;">
                            @{ var onStock = "";
                                if (prod.custom1 == "" || prod.custom1 == null)
                                {
                                    prod.custom1 = "20";
                                }
                                if (prod.stock != null && prod.stock != "")
                                {
                                    if (decimal.Parse(prod.stock) > decimal.Parse(prod.custom1))
                                    {
                                        onStock = "<span style='color:#1e7e34;'>Produkt je na sklade</span>";
                                    }
                                    else if (decimal.Parse(prod.stock) <= decimal.Parse(prod.custom1) && decimal.Parse(prod.stock) > 0)
                                    {
                                        onStock = "<span style='color:#e89300;'>Pozor, skladom menej ako " + prod.stock + " ks</span>";
                                    }
                                    else if (decimal.Parse(prod.stock) == 0)
                                    {
                                        onStock = "<span style='color:#1e7e34;'>Produkt je na sklade</span>";
                                    }
                                    else if (decimal.Parse(prod.stock) < 0)
                                    {
                                        onStock = "<span>Produkt na objednávku</span>";
                                    }

                                }
                                else
                                {
                                    onStock = "<span style='color:#1e7e34;'>Produkt je na sklade</span>";
                                }
                            }
                            <strong>Kód produktu: </strong>@prod.number<br />
                            <strong>Dostupnosť: </strong>@Html.Raw(onStock)<br />
                            @foreach (var brand in Model.BrandsModel.Where(i => i.id == Int32.Parse(prod.custom3)))
                            {
                                <strong>Výrobca: </strong><a href="">@Html.Raw(brand.name)</a><br />
                            }
                            @Html.Raw((prod.custom8 != "" && prod.custom8 != null) ? "<strong>Typ: </strong>" + Html.Raw(prod.custom8) + "<br />" : "")
                            @Html.Raw((prod.custom9 != "" && prod.custom9 != null) ? "<strong>Výkon: </strong>" + Html.Raw(prod.custom9) + " kW<br />" : "")
                            @Html.Raw((prod.custom10 != "" && prod.custom10 != null) ? "<strong>Rozloha miestnosti: </strong>" + Html.Raw(prod.custom10) + " m<sup>2</sup><br />" : "")

                            <hr />
                            <div class="row">
                                <div class="col-auto">
                                    <i class="fas fa-print"></i>
                                    <a href="#" onclick="window.print()">Tlačiť</a>
                                </div>
                                <div class="col-auto">
                                    <i class="far fa-question-circle"></i>
                                    <a href="#" data-toggle="modal" data-target="#myModalForAsk">Potrebujem poradiť</a>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-share"></i>
                                    <a href="https://www.facebook.com/sharer/sharer.php?u=@thisUrl" target="_blank">Zdieľať</a>        
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            @{ decimal cena = 0;
                                decimal povodnacena = 0;

                                //Zlavova politika
                                if (Session["username"] != null)
                                {
                                    int rating = Model.AllUsersMetaModel.FirstOrDefault().rating;

                                    <input type="hidden" name="userRating" value="@rating">
                                }
                            }

                            <div class="product-cart-container">

                                @if (prod.discountprice != null)
                                {
                                    cena = (decimal)prod.discountprice;
                            <p class="discount-price-text" style="text-align: right;font-size:25px; margin: 20px 0 0;color: #ff8b00;"><span class="discount-label">Akciová cena</span> <strong style="font-size:30px;"><span class="actual-price">@cena.ToString("N2")</span> €</strong> </p>
                        }
                        else
                        {
                            <p class="discount-price-text d-none" style="text-align: right;font-size:25px; margin: 20px 0 0;color: #ff8b00;"><span class="discount-label">Akciová cena</span> <strong style="font-size:30px;"><span class="actual-price">0</span> €</strong> </p>
                        }
                                @{
                                    if (prod.discountprice != null)
                                    {
                                        povodnacena = prod.price;
                                        <div class="discount-price-del" style="text-align: right;font-size:25px;">
                                            <strong><del>@povodnacena.ToString("N2") €</del></strong>
                                        </div>
                                    }
                                    else
                                    {

                                        <div class="d-none discount-price-del" style="text-align: right;font-size:25px;">
                                            <strong><del>@povodnacena.ToString("N2") €</del></strong>
                                        </div>

                                        cena = prod.price;
                                        if ((prod.custom6).ToString() == "True")
                                        {
                                            <div class="w-discount-price" style="text-align: right;font-size:30px;color: #ff8b00;"><strong>od @cena.ToString("N2") €</strong></div>
                                        }
                                        else
                                        {
                                            if (prod.price == 0)
                                            {
                                                <div class="w-discount-price" style="text-align: right;font-size:25px;color: #ff8b00;"><strong>Cena na vyžiadanie</strong></div>
                                            }
                                            else
                                            {

                                                //Zlavova politika
                                                if (Session["username"] != null)
                                                {
                                                    int rating = Model.AllUsersMetaModel.FirstOrDefault().rating;
                                                    povodnacena = prod.price;

                                                    switch (rating)
                                                    {
                                                        case 1:
                                                            cena *= (decimal)0.95;
                                                            break;
                                                        case 2:
                                                            cena *= (decimal)0.9;
                                                            break;
                                                        case 3:
                                                            cena *= (decimal)0.85;
                                                            break;
                                                    }

                                                    <input type="hidden" name="userRating" value="@rating">

                                                    var vars = Model.VariantModel.Where(o => o.prod_id == Int32.Parse(id)).ToList();

                                                    if (vars.Count() == 0)
                                                    {
                                                        <p class="discount-price-text" style="text-align: right;font-size:25px; margin: 20px 0 0;color: #ff8b00;"><small class="discount-label">Vaša cena so zľavou</small> <strong style="font-size:30px;"><span class="actual-price">@cena.ToString("N2")</span> €</strong> </p>

                                                        <div class="discount-price-del" style="text-align: right;font-size:18px;">
                                                            <small>Cena bez registrácie </small><strong><del>@povodnacena.ToString("N2") €</del></strong>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="w-discount-price" style="text-align: right;font-size:30px;color: #ff8b00;"><strong><span class="actual-price">@cena.ToString("N2")</span> €</strong></div>
                                                }
                                            }
                                        }
                                    }


                                    if (Session["username"] == null)
                                    {
                                        <p style="font-size: 12px; text-align: right;"><a href="#" class="register-modal"><u>Zaregistrujte sa</u></a> a získajte zľavu ďalších 5%</p>
                                    }

                                    if (prod.price == 0) //ak je zadana suma nula
                                    {
                                        if (prod.custom6 != null && (prod.custom6).ToString() == "True") //ak je zadane ze cena je od
                                        {
                                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModalForAsk">
                                                Odoslať žiadosť o informácie
                                            </button>
                                        }

                    <button type="button" class="btn btn-color addtocart" data-toggle="modal" data-target="#myModalForAsk">
                        <img src="/Content/images/Infobox_info_icon_white.svg" style="width: 20px;" alt="search">Odoslať žiadosť o informácie
                    </button>
                                    }
                                    else //ak je cena normalna
                                    {
                                        <div class="product-cart row">
                                            <div class="col-lg-4 col-sm-6 col-12 product-variation">

                                                @{
                                                    //var variants = Model.VariantModel.Where(o => o.prod_id == Int32.Parse(id)).ToList();
                                                    var vars = Model.VariantModel.Where(o => o.prod_id == Int32.Parse(id)).OrderBy(o => o.attribute_id).ThenBy(o => o.num).ToList();

                                                    if (vars.Count() > 0)
                                                    {
                                                        List<SelectListItem> options = new List<SelectListItem>();

                                                        var lastAttrName = "";
                                                        foreach (var variant in vars)
                                                        {

                                                            isVariable = true;

                                                            var attrId = variant.attribute_id;
                                                            var attrName = Model.AttributesModel.Where(o => o.id == attrId).SingleOrDefault().name;

                                                            if (lastAttrName != attrName)
                                                            {

                                                                if (lastAttrName != "")
                                                                {
                                                                    @Html.DropDownList(lastAttrName, options, null, new { @class = "form-control color-box" })
                                                                    options = new List<SelectListItem>();
                                                                }

                                                                <p style="color: #c7c7c7; font-size: 12px;padding: 10px;">@attrName</p>
                                                            }

                                                            options.Add(new SelectListItem { Text = variant.value, Value = (variant.price.ToString() + "|" + variant.discountprice.ToString()) });

                                                            lastAttrName = attrName;
                                                        }

                                                        @Html.DropDownList(lastAttrName, options, null, new { @class = "form-control color-box" })
                                                    }
                                                }

                                                <p style="color: #c7c7c7; font-size: 12px; padding: 10px;">Množstvo</p>
                                                <div class="cart-item-amount">
                                                    <button type="button" class="inc button">−</button>
                                                    <input type="number" name="amount[1050506]" value="1" min="1" max="30000" class="" id="quantity">
                                                    <button type="button" class="dec button">+</button>
                                                </div>


                                            </div>
                                            <div class="add-to-cart col-lg-8">
                                                <button id="addproductbtn" isvariableproduct="@isVariable.ToString()" class="btn btn-color addtocart"><img src="/Content/images/cart_white.svg" style="width: 20px;" alt="search">PRIDAŤ DO KOŠÍKA</button>

                                            </div>

                                            @*
                                                <div class="col-lg-4 col-sm-6 col-12 product-variation">
                                                    @if (prod.custom6 != null && prod.custom6 != "" && prod.custom6 != "False")
                                                    {
                                                        isvariablecolor = true;
                                                        <p style="color: #c7c7c7; font-size: 12px; text-align: center; padding: 10px;margin-top:-80px;">FARBA</p>
                                                        @Html.DropDownList("color", emptylist, "", new { @class = "form-control color-box" })
                                                    }
                                                    @if (prod.custom4 != null && prod.custom4 != "")
                                                    {
                                                        isvariableproduct = true;
                                                        <p style="color: #c7c7c7; font-size: 12px; text-align: center; padding: 10px;">VEĽKOSŤ</p>
                                                        @Html.DropDownList("size", emptylist, "", new { @class = "form-control select-box", onchange = "showSize()" })
                                                        @Html.DropDownList("size2", emptylist, "", new { @class = "form-control select-box2", style = "display:none;margin-top:10px;" })
                                                    }
                                                    <p style="color: #c7c7c7; font-size: 12px; text-align: center; padding: 10px;">MNOŽSTVO</p>
                                                    <div class="cart-item-amount">
                                                        <button type="button" class="inc button">−</button>
                                                        <input type="number" name="amount[1050506]" value="1" min="1" max="30000" class="" id="quantity">
                                                        <button type="button" class="dec button">+</button>
                                                    </div>
                                                </div>
                                                <div class="add-to-cart col-lg-8">
                                                    <button id="addproductbtn" isvariableproduct="@isvariableproduct.ToString()" isvariablecolor="@isvariablecolor.ToString()" class="btn btn-color addtocart"><img src="/Content/images/cart_white.svg" style="width: 20px;" alt="search">PRIDAŤ DO KOŠÍKA</button>

                                                </div>
                                            *@
                                        </div>

                                    }

                                    <div class="clearfix"></div>

                                    <div id="result"></div>
                                }

                            </div>
                        </div>
                    </div>
                    <div>
                        <h3>Popis produktu</h3>
                        <hr>
                        <p>@Html.Raw(prod.description)<br /><br /></p>
                    </div>
                }

            }

<div class="row products">
    <div class="col-md-12 no-gutters">
        <div class="row">
            <h2 class="col-md-12">
                Odporúčané produkty
            </h2>
        </div>

        <div class="row products-row">
            @{
                var prods = Model.ProductModel.OrderByDescending(o => o.id).Take(10);
                int order = Model.ProductModel.Count() - 1;
                if (order >= 9)
                {
                    order = 9;
                }

                var lastNewProd = Model.ProductModel.OrderByDescending(o => o.id).ElementAt(order);

                var prods2 = Model.ProductModel.Where(o => o.recommended == true).OrderByDescending(o => o.id).Take(10);
                foreach (var prod in prods2)
                {
                    bool isDiscounted = false;
                    var variants = Model.VariantModel.Where(o => o.prod_id == prod.id).OrderBy(o => o.num).ToList();

                    if (variants.Count() > 0)
                    {
                        foreach (var variant in variants)
                        {
                            if (variant.discountprice != null)
                            {
                                isDiscounted = true;

                                break;
                            }
                        }
                    }
                    else
                    {
                        if (prod.discountprice != null)
                        {
                            isDiscounted = true;
                        }
                    }

                    var slug = helper.ToUrlSlug(prod.title);
                    <div class="col-md product mx-1">
                        <a href="/detail-produktu/@prod.id/@slug">
                            <div class="thumb" style="background-image: url(/Uploads/@prod.image); height: 11vw;background-size:contain;"></div>
                            <div class="prod-labels">
                                @{
                                    if (isDiscounted == true)
                                    {
                                        <span class="prod-discount">akcia</span>
                                    }
                                }

                                @{
                                    if (DateTime.Compare(DateTime.Parse(prod.date), DateTime.Parse(lastNewProd.date)) >= 0)
                                    {
                                        <span class="prod-new">novinka</span>
                                    }
                                }
                            </div>
                            <div class="prod-header">@Html.Raw(prod.title)</div>
                            @{
                                var shortdescription = "";
                                if (prod.description != null && prod.description != "")
                                {
                                    shortdescription = Regex.Replace(prod.description, "<.*?>", String.Empty);
                                    if (shortdescription.Length > 60)
                                    {
                                        shortdescription = shortdescription.Substring(0, 60) + "...";
                                    }
                                }
                            }
                            <div class="prod-text">@Html.Raw(shortdescription)</div>
                            <div class="prod-prices">
                                @{
                                    decimal variantPriceFrom = 99999;
                                    string isVariant = "false";
                                    int firstAttrId = 0;
                                    foreach (var variant in variants)
                                    {

                                        if (firstAttrId == 0)
                                        {
                                            firstAttrId = variant.attribute_id;
                                        }

                                        if (firstAttrId == variant.attribute_id)
                                        {
                                            if (variant.discountprice != null)
                                            {
                                                if (variant.discountprice < variantPriceFrom)
                                                {
                                                    variantPriceFrom = (decimal)variant.discountprice;
                                                }
                                            }
                                            else
                                            {

                                                decimal thisPrice = 0;
                                                //rating
                                                if (Session["username"] != null)
                                                {
                                                    int rating = Model.AllUsersMetaModel.FirstOrDefault().rating;
                                                    decimal defaultPrice = (decimal)variant.price;
                                                    decimal ratingPrice = 0;

                                                    switch (rating)
                                                    {
                                                        case 1:
                                                            ratingPrice = (decimal)0.95 * defaultPrice;
                                                            break;
                                                        case 2:
                                                            ratingPrice = (decimal)0.9 * defaultPrice;
                                                            break;
                                                        case 3:
                                                            ratingPrice = (decimal)0.85 * defaultPrice;
                                                            break;
                                                    }

                                                    thisPrice = ratingPrice;
                                                }
                                                else
                                                {
                                                    thisPrice = (decimal)variant.price;
                                                }

                                                if (thisPrice < variantPriceFrom)
                                                {
                                                    variantPriceFrom = thisPrice;
                                                }

                                            }
                                        }

                                        isVariant = "true";
                                    }

                                    decimal actualPrice = (decimal)0.0;
                                    if (variantPriceFrom != 99999)
                                    {
                                        <span class="prod-price-from">od @variantPriceFrom.ToString("N2") €</span>
                                    }
                                    else
                                    {

                                        if (prod.discountprice != null)
                                        {
                                            <span class="prod-discount">@prod.price.ToString("N2") €</span><span class="prod-base">@(((decimal)prod.discountprice).ToString("N2")) €</span>
                                            actualPrice = (decimal)prod.discountprice;
                                        }
                                        else
                                        {
                                            //rating
                                            if (Session["username"] != null)
                                            {
                                                int rating = Model.AllUsersMetaModel.FirstOrDefault().rating;
                                                decimal defaultPrice = prod.price;
                                                decimal ratingPrice = 0;

                                                switch (rating)
                                                {
                                                    case 1:
                                                        ratingPrice = (decimal)0.95 * defaultPrice;
                                                        break;
                                                    case 2:
                                                        ratingPrice = (decimal)0.9 * defaultPrice;
                                                        break;
                                                    case 3:
                                                        ratingPrice = (decimal)0.85 * defaultPrice;
                                                        break;
                                                }

                                                <span class="prod-discount">@defaultPrice.ToString("N2") €</span><span class="prod-base">@ratingPrice.ToString("N2") €</span>
                                                actualPrice = ratingPrice;
                                            }
                                            else
                                            {
                                                <span class="prod-base">@prod.price.ToString("N2") €</span>
                                                actualPrice = prod.price;
                                            }
                                        }

                                    }
                                }
                            </div>
                        </a>

                        @{
                            var actualPriceStr = actualPrice.ToString("N2").Replace(",", ".");
                        }

                        <span onclick='addToCart(@prod.id, @isVariant, @actualPriceStr)' class="prod-add-to-cart">
                            <img class="prod-icon" src="~/Content/images/cart.svg">
                            <span>Pridať do košíka</span>
                        </span>
                    </div>
                }
            }
        </div>
    </div>
    </div>

    <div class="row products">
        <div class="col-md-12 no-gutters">
            <div class="row">
                <h2 class="col-md-12">
                    Novinky v e-shope
                </h2>
            </div>
            <div class="row products-row">
                @{
                    foreach (var prod in prods)
                    {
                        bool isDiscounted = false;
                        var variants = Model.VariantModel.Where(o => o.prod_id == prod.id).OrderBy(o => o.num).ToList();

                        if (variants.Count() > 0)
                        {
                            foreach (var variant in variants)
                            {
                                if (variant.discountprice != null)
                                {
                                    isDiscounted = true;

                                    break;
                                }
                            }
                        }
                        else
                        {
                            if (prod.discountprice != null)
                            {
                                isDiscounted = true;
                            }
                        }

                        var slug = helper.ToUrlSlug(prod.title);
                        <div class="col-md product mx-1">
                            <a href="/detail-produktu/@prod.id/@slug">
                                <div class="thumb" style="background-image: url(/Uploads/@prod.image); height: 11vw;background-size:contain;">
                                </div>
                                <div class="prod-labels">
                                    @{
                                        if (isDiscounted == true)
                                        {
                                            <span class="prod-discount">akcia</span>
                                        }
                                    }

                                    @{
                                        if (DateTime.Compare(DateTime.Parse(prod.date), DateTime.Parse(lastNewProd.date)) >= 0)
                                        {
                                            <span class="prod-new">novinka</span>
                                        }
                                    }
                                </div>
                                <div class="prod-header">@Html.Raw(prod.title)</div>
                                @{
                                    var shortdescription = "";
                                    if (prod.description != null && prod.description != "")
                                    {
                                        shortdescription = Regex.Replace(prod.description, "<.*?>", String.Empty);
                                        if (shortdescription.Length > 60)
                                        {
                                            shortdescription = shortdescription.Substring(0, 60) + "...";
                                        }
                                    }
                                }
                                <div class="prod-text">@Html.Raw(shortdescription)</div>
                                <div class="prod-prices">
                                    @{
                                        decimal variantPriceFrom = 99999;
                                        string isVariant = "false";
                                        int firstAttrId = 0;
                                        foreach (var variant in variants)
                                        {

                                            if (firstAttrId == 0)
                                            {
                                                firstAttrId = variant.attribute_id;
                                            }

                                            if (firstAttrId == variant.attribute_id)
                                            {
                                                if (variant.discountprice != null)
                                                {
                                                    if (variant.discountprice < variantPriceFrom)
                                                    {
                                                        variantPriceFrom = (decimal)variant.discountprice;
                                                    }
                                                }
                                                else
                                                {

                                                    decimal thisPrice = 0;
                                                    //rating
                                                    if (Session["username"] != null)
                                                    {
                                                        int rating = Model.AllUsersMetaModel.FirstOrDefault().rating;
                                                        decimal defaultPrice = (decimal)variant.price;
                                                        decimal ratingPrice = 0;

                                                        switch (rating)
                                                        {
                                                            case 1:
                                                                ratingPrice = (decimal)0.95 * defaultPrice;
                                                                break;
                                                            case 2:
                                                                ratingPrice = (decimal)0.9 * defaultPrice;
                                                                break;
                                                            case 3:
                                                                ratingPrice = (decimal)0.85 * defaultPrice;
                                                                break;
                                                        }

                                                        thisPrice = ratingPrice;
                                                    }
                                                    else
                                                    {
                                                        thisPrice = (decimal)variant.price;
                                                    }

                                                    if (thisPrice < variantPriceFrom)
                                                    {
                                                        variantPriceFrom = thisPrice;
                                                    }

                                                }
                                            }

                                            isVariant = "true";
                                        }

                                        decimal actualPrice = (decimal)0.0;
                                        if (variantPriceFrom != 99999)
                                        {
                                            <span class="prod-price-from">od @variantPriceFrom.ToString("N2") €</span>
                                        }
                                        else
                                        {

                                            if (prod.discountprice != null)
                                            {
                                                <span class="prod-discount">@prod.price.ToString("N2") €</span><span class="prod-base">@(((decimal)prod.discountprice).ToString("N2")) €</span>
                                                actualPrice = (decimal)prod.discountprice;
                                            }
                                            else
                                            {
                                                //rating
                                                if (Session["username"] != null)
                                                {
                                                    int rating = Model.AllUsersMetaModel.FirstOrDefault().rating;
                                                    decimal defaultPrice = prod.price;
                                                    decimal ratingPrice = 0;

                                                    switch (rating)
                                                    {
                                                        case 1:
                                                            ratingPrice = (decimal)0.95 * defaultPrice;
                                                            break;
                                                        case 2:
                                                            ratingPrice = (decimal)0.9 * defaultPrice;
                                                            break;
                                                        case 3:
                                                            ratingPrice = (decimal)0.85 * defaultPrice;
                                                            break;
                                                    }

                                                    <span class="prod-discount">@defaultPrice.ToString("N2") €</span><span class="prod-base">@ratingPrice.ToString("N2") €</span>
                                                    actualPrice = ratingPrice;
                                                }
                                                else
                                                {
                                                    <span class="prod-base">@prod.price.ToString("N2") €</span>
                                                    actualPrice = prod.price;
                                                }
                                            }
                                        }
                                    }
                                </div>
                            </a>

                            @{
                                var actualPriceStr = actualPrice.ToString("N2").Replace(",", ".");
                            }

                            <span onclick='addToCart(@prod.id, @isVariant, @actualPriceStr)' class="prod-add-to-cart">
                                <img class="prod-icon" src="~/Content/images/cart.svg" />
                                <span>Pridať do košíka</span>
                            </span>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</section>

    <!-- The Modal -->
    <div id="myModalForAsk" class="modal" tabindex="-1" role="dialog" aria-hidden="true">

        <!-- Modal content -->
        <div class="modal-login container">
            <div class="row" style="display: block;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("askForPrice", "Products", new { id = id }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "text-center" }))
            {
                foreach (var prod in (IEnumerable<Cms.Models.products>)ViewBag.Detaily)
                {
                    var validationEmail = "";
                    if (Model.AllUsersMetaModel != null)
                    {
                        foreach (var user in Model.AllUsersMetaModel)
                        {
                            validationEmail = user.email;
                        }
                    }
                    <h3>Vaše informácie</h3>
                    <hr />
                    <div class="row">

                        <div class="col-12">

                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.EmailSendModel.Subject, "Predmet", htmlAttributes: new { @class = "control-label" })

                                <div class="form-group row ml-0 p-0 col mb-1">
                                    <div class="col-md-8 p-0" style="margin: 0 auto;">
                                        @Html.EditorFor(model => model.EmailSendModel.Subject, new { htmlAttributes = new { @class = "form-control", @Value = "Žiadam o cenu produktu: " + prod.title } })
                                        @Html.ValidationMessageFor(model => model.EmailSendModel.Subject, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @Html.LabelFor(model => model.EmailSendModel.Email, "Váš e-mail", htmlAttributes: new { @class = "control-label" })

                                <div class="form-group row ml-0 p-0 col mb-1">
                                    <div class="col-md-8 p-0" style="margin: 0 auto;">
                                        @Html.EditorFor(model => model.EmailSendModel.Email, new { htmlAttributes = new { @class = "form-control", @Value = validationEmail } })
                                        @Html.ValidationMessageFor(model => model.EmailSendModel.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            @Html.LabelFor(model => model.EmailSendModel.Message, "Správa", htmlAttributes: new { @class = "control-label" })

                            <div class="form-group row ml-0 p-0 col mb-1">
                                <div class="col-md-8 p-0" style="margin: 0 auto;">
                                    @Html.TextAreaFor(model => model.EmailSendModel.Message, htmlAttributes: new { @class = "form-control", @rows = "5" })
                                    @Html.ValidationMessageFor(model => model.EmailSendModel.Message, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                <div class="right">
                                    <input type="submit" value="Odoslať žiadosť o informácie" class="btn btn-color col-5" />
                                </div>
                            </div>
                        </div>


                    </div>

                }
            }
        </div>

    </div>

    @foreach (var prod in (IEnumerable<Cms.Models.products>)ViewBag.Detaily)
    {

        <script>

            $(document).ready(function () {

                function getRatingPrice($price) {

                    if ($("input[name=userRating]").length) {
                        $rating = $("input[name=userRating]").val();

                        switch ($rating) {
                            case "1":
                                return $price * 0.95;
                                break;
                            case "2":
                                return $price * 0.9;
                                break;
                            case "3":
                                return $price * 0.85;
                                break;
                        }
                    }

                    return $price;
                }

                function initVariants() {

                    $thisPrices = $(".product-variation select").eq(0).val().split("|");

                    $thisPriceDefault = parseFloat($thisPrices[0].replace(",", "."));
                    $thisPrice = getRatingPrice($thisPriceDefault);

                    $thisDiscount = $thisPrices[1].replace(",", ".");
                    $thisDiscount = parseFloat($thisDiscount == "" ? 0 : $thisDiscount);

                    if ($thisDiscount == 0) {

                        if ($("input[name=userRating]").length) {
                            $(".actual-price").text($thisPrice.toFixedNoRounding(2));
                            $("#actual-price-w-tax").text(($thisPrice * 100 / 120).toFixedNoRounding(2));

                            $(".discount-price-del del").text($thisPriceDefault.toFixedNoRounding(2) + " €");

                            $(".discount-label").text("Cena po registrácii");

                            $(".discount-price-text, .discount-price-del").removeClass("d-none");
                            $(".w-discount-price").addClass("d-none");
                        } else {
                            $(".actual-price").text($thisPrice.toFixedNoRounding(2));
                            $("#actual-price-w-tax").text(($thisPrice * 100 / 120).toFixedNoRounding(2));

                            $(".discount-price-text, .discount-price-del").addClass("d-none");
                            $(".w-discount-price").removeClass("d-none");
                        }
                    } else {

                        $(".actual-price").text($thisDiscount.toFixedNoRounding(2));
                        $("#actual-price-w-tax").text(($thisDiscount * 100 / 120).toFixedNoRounding(2));

                        $(".discount-price-del del").text($thisPrice.toFixedNoRounding(2) + " €");

                        $(".discount-label").text("Akciová cena");

                        $(".discount-price-text, .discount-price-del").removeClass("d-none");
                        $(".w-discount-price").addClass("d-none");
                    }
                }

                if ($(".product-variation select").length) {
                    initVariants();

                    $(".product-variation select").eq(0).change(function () {
                        initVariants();
                    });
                }
            });
        </script>
    }
    <script src="~/Lightbox/ekko-lightbox.js"></script>
    <script type="text/javascript" src="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
<script>
     $(document).ready(function () {
        $('.products-row').slick({
            infinite: true,
            slidesToShow: 5,
            slidesToScroll: 5,
            responsive: [
                {
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 4,
                        slidesToScroll: 4,
                        infinite: true,
                        dots: true
                    }
                },
                {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2
                    }
                },
                {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2
                    }
                }]
        });
     });
</script>
    <script>
        $(document).on('click',
            '[data-toggle="lightbox"]',
            function (event) {
                event.preventDefault();
                $(this).ekkoLightbox();
            });
        
    </script>
    <script src="~/Scripts/add_product_to_cart.js"></script>


