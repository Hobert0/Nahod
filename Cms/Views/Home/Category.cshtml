@using System.Collections
@using Cms.Controllers
@using Newtonsoft.Json;
@model Cms.Models.MultipleIndexModel
@{
    HelperController helper = new HelperController();

    var kategoria = ViewData["Category"].ToString();

    if (ViewData["Sub"] != null)
    {
        var sub = ViewData["Sub"].ToString();
    }
    var nameofcat = ViewContext.RouteData.Values["catslug"];

    var catName = "";
    var mainCatName = "";

    var catID = 0;
    if (ViewData["CatId"] != null && ViewData["CatId"] != "")
    {
        catID = Int32.Parse(ViewData["CatId"].ToString());
    }

    var categorySlug = (string)ViewData["catslug"];
    var categorySubSlug = (string)ViewData["subslug"];

}
<style>
    #front-picture, #services {
        display: none !important;
    }
</style>
<div class="container-fluid w-75">
    <div class="row py-0 py-sm-4">

        <div class="col" style="padding-left:0px;padding-right:0px;">

            @if (catID != 0)
            {
                foreach (var cat in Model.CategoriesModel.Where(i => i.id == catID))
                {
                    ViewBag.Title = cat.name + " -";
                    ViewBag.Description = cat.description;
                    catName = cat.name;
                    mainCatName = cat.maincat;


                    if (cat.maincat == "Žiadna")
                    {
                        <h2 class="categoryHeader">@Html.Raw(cat.name)</h2>
                    }
                    else if (cat.topcat == "" || cat.topcat == "Žiadna")
                    {
                        var topcatID = int.Parse(cat.maincat);
                        var topcat = Model.CategoriesModel.Where(i => i.id == topcatID).FirstOrDefault().name;
                        <h2 class="categoryHeader">@Html.Raw(topcat) / @Html.Raw(cat.name)</h2>
                    }
                    else if (cat.topcat2 == "" || cat.topcat2 == "Žiadna")
                    {
                        var topcatID = int.Parse(cat.topcat);
                        var topcat = Model.CategoriesModel.Where(i => i.id == topcatID).FirstOrDefault().name;
                        <h2 class="categoryHeader">@Html.Raw(topcat) / @Html.Raw(cat.name)</h2>
                    }
                    else
                    {
                        <h2 class="categoryHeader">@Html.Raw(cat.topcat2) / @Html.Raw(cat.name)</h2>
                    }
                }
            }
            else if (nameofcat.ToString() == "novinky")
            {
                <h2>Novinky</h2>
                ViewBag.Title = "Novinky -";
            }
            else if (nameofcat.ToString() == "zlavy")
            {
                <h2>Produkty v zľave</h2>
                ViewBag.Title = "Produkty v zľave -";
            }

            <div class="container-fluid">
                <div class="row justify-content-md">



                    @{

                        if (categorySlug != null && categorySubSlug == null)
                        {
                            foreach (var category in Model.CategoriesModel.Where(x => x.maincat == catID.ToString() && x.deleted == false && x.topcat == "Žiadna"))
                            {
                                <div class="col-md-auto subcatthumb py-2 m-1">
                                    <a href="@Url.Action("Category", "Home", new { catslug = @Html.Raw(categorySlug), subslug = @Html.Raw(category.slug) })">
                                        <div style="background-image: url('/Uploads/@category.image'); background-size: contain;background-repeat: no-repeat; background-position: center;"></div>
                                        <p>@category.name</p>
                                    </a>
                                </div>
                            }
                        }
                        else if (categorySlug != null && categorySubSlug != null)
                        {
                            foreach (var subcat2 in Model.CategoriesModel.Where(o => o.topcat2 == "Žiadna" && o.topcat == catID.ToString()))
                            {
                                <div class="col-md-auto subcatthumb py-2 m-1">
                                    <a href="@Url.Action("Category", "Home", new { catslug = @Html.Raw(categorySlug), subslug = @Html.Raw(categorySubSlug), subslug2 = subcat2.slug })">
                                        <div style="background-image: url('/Uploads/@subcat2.image'); background-size: contain;background-repeat: no-repeat; background-position: center;">
                                        </div>
                                        <p> @subcat2.name</p>
                                    </a>
                                </div>
                            }
                        }


                    }

                    @{
                        /*
                            @foreach (var cat in Model.CategoriesModel.Where(i => i.maincat == catName && i.topcat == "Žiadna"))
                            {
                                <div class="col-md-auto subcatthumb py-2 m-1">
                                    <a href="@Url.Action("Category", "Home", new { catslug = @Html.Raw(nameofcat), subslug = @Html.Raw(cat.slug) })">
                                        <div style="background-image: url(/Uploads/@cat.image); background-size: contain;"></div>
                                        <p>@cat.name</p>
                                    </a>
                                </div>
                            }
                            @foreach (var cat in Model.CategoriesModel.Where(i => i.maincat == mainCatName && i.topcat == catName))
                            {
                                <div class="col-md-auto subcatthumb py-2 m-1">
                                    <a href="@Url.Action("Category", "Home", new { catslug = @Html.Raw(nameofcat), subslug = @Html.Raw(cat.slug) })">
                                        <div style="background-image: url(/Uploads/@cat.image); background-size: contain;"></div>
                                        <p>@cat.name</p>
                                    </a>
                                </div>
                            }
                        */
                    }
                </div>
            </div>

            <hr />

            <div class="container-fluid category-most-sold">

                <div class="row" style="margin-bottom: 10px;">
                    <div class="col-12">
                        <h3>Najpredávanejšie</h3>
                    </div>
                </div>

                @{
                    var mostSoldCounter = 1;
                    foreach (var item in (IEnumerable<int[]>)ViewData["mostSold"])
                    {
                        var prod = Model.ProductModel.Where(i => i.id == item[0]).FirstOrDefault();
                        var img = prod.image;
                        var title = prod.title;

                        var slug = helper.ToUrlSlug(prod.title);
                        var link = "/detail-produktu/" + prod.id + "/" + slug;

                        var variants = Model.VariantModel.Where(o => o.prod_id == prod.id).OrderBy(o => o.num).ToList();


                        decimal variantPriceFrom = 99999;
                        int firstAttrId = 0;
                        foreach (var variant in variants)
                        {

                            if (firstAttrId == 0)
                            {
                                firstAttrId = variant.attribute_id;
                            }

                            if (firstAttrId == variant.attribute_id)
                            {
                                if (variant.discountprice != null)
                                {
                                    if (variant.discountprice < variantPriceFrom)
                                    {
                                        variantPriceFrom = (decimal)variant.discountprice;
                                    }
                                }
                                else
                                {

                                    decimal thisPrice = 0;
                                    //rating
                                    if (Request.Cookies["username"] != null)
                                    {
                                        int rating = Model.AllUsersMetaModel.FirstOrDefault().rating;
                                        decimal defaultPrice = (decimal)variant.price;
                                        decimal ratingPrice = 0;

                                        switch (rating)
                                        {
                                            case 1:
                                                ratingPrice = (decimal)0.95 * defaultPrice;
                                                break;
                                            case 2:
                                                ratingPrice = (decimal)0.9 * defaultPrice;
                                                break;
                                            case 3:
                                                ratingPrice = (decimal)0.85 * defaultPrice;
                                                break;
                                        }

                                        thisPrice = ratingPrice;
                                    }
                                    else
                                    {
                                        thisPrice = (decimal)variant.price;
                                    }

                                    if (thisPrice < variantPriceFrom)
                                    {
                                        variantPriceFrom = thisPrice;
                                    }

                                }
                            }
                        }

                        string actualPrice = "";
                        if (variantPriceFrom != 99999)
                        {
                            actualPrice = "od " + variantPriceFrom.ToString("N2") + " €";
                        }
                        else
                        {

                            if (prod.discountprice != null)
                            {
                                actualPrice = ((decimal)prod.discountprice).ToString("N2") + " €";
                            }
                            else
                            {
                                //rating
                                if (Request.Cookies["username"] != null)
                                {
                                    int rating = Model.AllUsersMetaModel.FirstOrDefault().rating;
                                    decimal defaultPrice = prod.price;
                                    decimal ratingPrice = 0;

                                    switch (rating)
                                    {
                                        case 1:
                                            ratingPrice = (decimal)0.95 * defaultPrice;
                                            break;
                                        case 2:
                                            ratingPrice = (decimal)0.9 * defaultPrice;
                                            break;
                                        case 3:
                                            ratingPrice = (decimal)0.85 * defaultPrice;
                                            break;
                                    }

                                    actualPrice = ratingPrice.ToString("N2") + " €";
                                }
                                else
                                {
                                    actualPrice = prod.price.ToString("N2") + " €";
                                }
                            }

                        }
                        actualPrice = actualPrice.Replace(",", ".");

                        var style = "";
                        var clss = "";
                        if (mostSoldCounter > 3)
                        {
                            style = "display: none;";
                        }
                        else
                        {
                            clss = "alwaysShow";
                        }
                        <div class="row prod-row @clss" style="@style">
                            <div class="col-8">
                                <a href="@link" style="display: flex; justify-content: flex-start;align-items: center;">@mostSoldCounter. <img src="~/Uploads/@img"><p>@title</p></a>
                            </div>
                            <div class="col-4" style="text-align: right;">
                                @actualPrice
                            </div>
                        </div>

                        mostSoldCounter++;
                    }


                }

                <div class="row more-row">
                    <div class="col-12" style="text-align: center;">
                        <a href="#" class="showMoreProds">Zobraziť ďalšie produkty</a>
                    </div>
                </div>

            </div>

            <hr />

            @{
                Html.RenderPartial("_Filter");
            }
            <div id="ajaxProducts" class="products m-0"></div>

            <nav class="pagination-container" aria-label="Page navigation example">
                <ul class="pagination" id="pagination">
                </ul>
            </nav>

        </div>

    </div>
</div>
<script src="~/Scripts/fetchProducts.js"></script>
<script src="~/Scripts/filterProducts.js"></script>
<script src="~/Scripts/add_to_session.js"></script>
<script>
    $(".showMoreProds").click(function (e) {
        e.preventDefault();

        if ($(this).text() == "Zobraziť ďalšie produkty") {
            $(".category-most-sold .prod-row").css("display", "flex");
            $(this).text("Skryť");
        } else {
            $(".category-most-sold .prod-row:not(.alwaysShow)").css("display", "none");
            $(this).text("Zobraziť ďalšie produkty");
        }

    });
</script>
