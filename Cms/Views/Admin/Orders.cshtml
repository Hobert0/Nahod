@model IEnumerable<Cms.Models.OrdersModel>

@{
    Layout = "~/Views/Shared/_LayoutCms.cshtml";
    ViewBag.Title = "Administrácia";
    var modelItems = Model;
}

<h2>Objednávky</h2>
<hr />
<table id="myTable" class="table" style="font-size: 13px;">
    <thead>
        <tr>
            <th></th>
            <th>Č. ob.</th>
            <th style="width: 25vw;">Meno a priezvisko, adresa</th>
            <th>Dátum</th>
            <th>Platba</th>
            <th>Doprava</th>
            <th>Cena spolu</th>
            <th>Poznámka Zákazník</th>
            <th>Poznámka Admin</th>
            <th>Stav</th>
            <th style="text-align: center; width: 30vw;">Detail | Vybaviť | Stornovať</th>
            <!--<th>PDF faktúra</th>-->
            <th>Kategória zákazníka</th>
        </tr>
    </thead>
    @if (ViewBag.Details == null)
    {
        foreach (var item in modelItems.OrderByDescending(i => i.Id))
        {
            var trans = "";
            var status = "";
            var payment = "";
            if (item.Shipping == "transfer1")
            {
                trans = "Kuriérska spoločnosť";
            }
            else if (item.Shipping == "transfer2")
            {
                trans = "Slovenská pošta";
            }
            else if (item.Shipping == "transfer3")
            {
                trans = "Osobný odber";
            }

            if (item.Payment == "pay1")
            {
                payment = "V hotovosti";
            }
            else if (item.Payment == "pay2")
            {
                payment = "Kartou";
            }
            else if (item.Payment == "pay3")
            {
                payment = "Bankovým prevodom";
            }
            else if (item.Payment == "pay4")
            {
                payment = "Dobierkou";
            }

            var visibility = "";
            var visibilityStorno = "";
            var stornostyle = "";
            var trStyle = "";
            if (item.Status == 1)
            {
                visibility = "visibility: hidden !important;";
                status = "Vybavená";
                trStyle = "background-color: rgba(0,255,0,0.25);";

            }
            else if (item.Status == 2)
            {
                visibility = "visibility: hidden !important;";
                stornostyle = "opacity: .2 !important;";
                status = "Stornovaná";
                visibilityStorno = "visibility: hidden !important;";
            }
            else
            {
                visibility = "visibility: visible !important;";
                status = "Prijatá";
            }

            var userCategory = "";
            if (item.UserRating == 1)
            {
                userCategory = "Bronzový";
            }
            else if (item.UserRating == 2)
            {
                userCategory = "Strieborný";
            }
            else if (item.UserRating == 3)
            {
                userCategory = "Zlatý";
            }

<tr style="@trStyle">

    @{if (item.Status == 2)
        {
            <td class="p-0" style="width: 1px;">
                <div class="popover__wrapper" style="display: inline-block;position: absolute; margin-left: 10px;margin-top: 7px;">
                    <a href="#">
                        <strong class="popover__title"><img src="/Content/images/infobox_info_icon.svg" style="width: 18px;" /></strong>
                    </a>
                    <div class="push popover__content">
                        <p class="popover__message">Stornovaná objednávka!</p>
                    </div>
                </div>
            </td>
        }
        else
        {
            <td class="p-0" style="width: 1px;"></td>
        }
    }


    <td style="@stornostyle">@Html.DisplayFor(modelItem => item.Ordernumber)</td>
    <td style="@stornostyle"><strong>@Html.DisplayFor(modelItem => item.Name) @Html.DisplayFor(modelItem => item.Surname)</strong><br>@Html.DisplayFor(modelItem => item.Address), @Html.DisplayFor(modelItem => item.City) @Html.DisplayFor(modelItem => item.Zip)</td>
    <td style="@stornostyle">@Html.DisplayFor(modelItem => item.Date)</td>
    <td style="@stornostyle">@payment</td>
    <td style="@stornostyle">@trans</td>
    <td style="background-color: #e4ffe3; white-space: nowrap;text-align: center;@stornostyle"><strong>@Html.DisplayFor(modelItem => item.Finalprice) €</strong></td>
    <td style="@stornostyle">@Html.DisplayFor(modelItem => item.Comment)</td>
    <td class="editable" style="@stornostyle width:35vw;">@Html.DisplayFor(modelItem => item.Note)</td>
    <td style="@stornostyle">@status</td>
    <!--
    <td style="@stornostyle">
        @using (Html.BeginForm("UpdateOrderNote", "Orders", FormMethod.Post, new { id = "NoteForm" }))
        {
            @Html.TextArea("orderNote", new { @class = "form-control", placeholder = "Poznámka", Name = "orderNote", Value = item.Comment })
            @Html.Hidden("orderId", item.Id)

            <div class="form-group" style="margin-bottom:0px;">
                <div style="text-align: right">
                    <input type="submit" value="Uložiť" class="btn btn-success" style="font-size:10px;margin: 0 auto;display: block;" />
                </div>
            </div>
        }
    </td>
    -->
    <td style="@stornostyle width:30vw;" align="center">@Html.ActionLink("Detail", "OrderDetail", "Orders", new { orderNumber = item.Ordernumber }, new { @class = "btn btn-warning", style = "color: #ffffff !important;" }) @Html.ActionLink(HttpUtility.HtmlDecode("&#10003;"), "FinishedOrder", "Orders", new { orderNumber = item.Ordernumber, confirm = true }, new { onclick = "return confirm('Naozaj chcete potvdiť objednávku ako odoslanú?')", @class = "btn btn-success finished", style = "padding:.375rem .75rem !important;" + visibility + "", data_toggle = "tooltip", data_placement = "top", title = "Kliknutím nenávratne potvrdíte objednávku." }) @Html.ActionLink(HttpUtility.HtmlDecode("&#9747;"), "StornoOrder", "Orders", new { id = item.Ordernumber, confirm = true }, new { onclick = "return confirm('Naozaj chcete stornovať objednávku??')", @class = "btn btn-danger", style = "padding:.375rem .75rem !important;" + visibilityStorno + "", data_toggle = "tooltip", data_placement = "top", title = "Kliknutím nenávratne stornujete objednávku." })</td>
    <!--
    <td>
        <a style="@stornostyle" href="@Url.Action("PdfOrder", "Orders", new { orderNumber = item.Ordernumber })"><img src="~/Content/images/icon-pdf.png" style="width: 30px;" alt="PDF faktúra" title="PDF faktúra" /></a> @{if (item.Status == 2)
            {<a href="@Url.Action("PdfStorno", "Orders", new { orderNumber = item.Ordernumber })"><img src="~/Content/images/icon-pdf.png" style="width: 30px;" alt="PDF dobropis" title="PDF dobropis" /></a>}}
    </td>
    -->
    <td style="@stornostyle">@userCategory</td>


</tr>
        }
    }


</table>

<script>
    $(document).ready(function () {
        //dopisanie value textarei a prepisanie buttonu ak uz existuje text z Vytvorit poznamku na Upravit poznamku
        if ($("#NoteForm textarea").attr("value") != "") {
            $("#NoteForm textarea").text($("#NoteForm textarea").attr("value"));
        }

        //editacia poznamky od admina
        $(document).on("dblclick", ".editable", function () {
            //len ak uz nemame otvorenu editaciu
            if ($(".editValue").length == 0) {
                $name = $(this).attr("name");

                $value = $(this).text().trim();

                $html = '<input class="editValue" type="text" name="editValue" value="' + $value + '"><a class="btn btn-warning editValueSave" href="#" style="margin-top:5px;">Zmeniť</a><a class="btn editValueCancel" style="margin-left:5px;margin-top:5px;">Zrušiť</a>';

                $(this).attr("defValue", $value);

                $(this).html($html);
            }
        });

        $(document).on("click", ".editValueSave", function () {
            $value = $(this).parents(".editable").find(".editValue").val();
            $ordNum = $(this).parents("tr").find("td").eq(1).text();

            $thisObj = $(this);

            let APIurl = "/Api/EditOrderNote";
            $.ajax({
                url: APIurl,
                type: 'GET',
                async: false,
                data: { value: $value, ordNum: $ordNum },
                dataType: 'json',
                success: function (data) {
                    $thisObj.parents(".editable").text($value);
                }
            });

        });

        $(document).on("click", ".editValueCancel", function () {
           $value = $(this).parents(".editable").attr("defValue");

           $(this).parents(".editable").text($value);
        });
    });
</script>


