@model Cms.Models.MultipleIndexModel
@{
    Layout = "~/Views/Shared/_LayoutCms.cshtml";
    ViewBag.Title = "Správa používateľov";
    var passwordTest = "";
    var userRole = "";
    var category = "";
}

<h2>Správa používateľov</h2>
<hr />
<p><b>Pridať admina</b></p>
@using (Html.BeginForm("AddAdmin", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-2" style="padding:0">
                @Html.EditorFor(model => Model.UsersModel.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.UsersModel.Username, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="margin:0">
            <div class="col-md-2" style="padding:0">
                <div class="form-group">
                    <div class="col-md-13">
                        @Html.PasswordFor(model => model.UsersModel.Password, new { @class = "form-control", placeholder = "Heslo", id = "heslo" })
                        @Html.ValidationMessageFor(model => model.UsersModel.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-2" style="padding:0">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.PasswordFor(model => passwordTest, new { @class = "form-control", placeholder = "Overenie hesla", id = "overheslo" })
                        @Html.ValidationMessageFor(model => passwordTest, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <!--
        <div class="row" style="margin:0">
            <div class="col-md-2" style="padding:0">
                <div class="form-group">
                    <div class="col-md-13">
                        @Html.DropDownListFor(model => model.UsersModel.Role, (IEnumerable<SelectListItem>)ViewData["Rola"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UsersModel.Role, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        -->

        <div id="alert" class="text-danger" style="display: none;">Zadané heslá sa nezhodujú!</div>
        <div class="form-group">
            <div>
                <input type="submit" value="Pridať admina" class="btn btn-success submitbtn" onclick="if (validateForm() != true) { return false;}" />
            </div>
        </div>
    </div>

}
<hr />
<a href="@Url.Action("UserCreate", "Admin")" class="btn btn-danger">Pridať používateľa</a>
<hr />
<table id="myTable" class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Rola</th>
            <th>Používateľské meno</th>
            <th>Meno</th>
            <th>Priezvisko</th>
            <th>Email</th>
            <th>Tel.č.</th>
            <th>Adresa</th>
            <th>Mesto</th>
            <th>PSČ</th>
            <th>Novinky</th>
            <th>GDPR</th>
            <th>Registrácia</th>
            <th>Žiadosť o odstránenie</th>
            <th>Kategória</th>
            <th>Výška obratu</th>

            <th style="text-align: center;">Akcie</th>

        </tr>
    </thead>
    @if (ViewBag.Details == null)
    {
        foreach (var item in Model.AllUsersPaged.OrderBy(i => i.id))
        {
            if (item.role == 1) { userRole = "Zákazník"; }
            else if (item.role == 0) { userRole = "Admin"; }
            else if (item.role == 2) { userRole = "Newsletter subscriber"; }

<tr>
    <td>@Html.DisplayFor(modelItem => item.id)</td>
    <td>@Html.Raw(userRole)</td>

    <td><strong>@Html.DisplayFor(modelItem => item.username)</strong></td>
    @foreach (var meta in Model.AllUsersMetaModel.Where(u => u.userid == item.id))
    {
        <td>@Html.DisplayFor(modelItem => meta.name, new { @value = " fghfg" })</td>
        <td>@Html.DisplayFor(modelItem => meta.surname, new { htmlAttributes = new { @Value = " " } })</td>
        <td>@Html.DisplayFor(modelItem => meta.email, new { htmlAttributes = new { @Value = " " } })</td>
        <td>@Html.DisplayFor(modelItem => meta.phone, new { htmlAttributes = new { @Value = " " } })</td>
        <td>@Html.DisplayFor(modelItem => meta.address, new { htmlAttributes = new { @Value = " " } })</td>
        <td>@Html.DisplayFor(modelItem => meta.city, new { htmlAttributes = new { @Value = " " } })</td>
        <td>@Html.DisplayFor(modelItem => meta.zip, new { htmlAttributes = new { @Value = " " } })</td>

        if (item.role == 1)
        {
            if (meta.category == 1) { category = "Bronzový"; }
            else if (meta.category == 2) { category = "Strieborný"; }
            else if (meta.category == 3) { category = "Zlatý"; }

            <td>@Html.DisplayFor(modelItem => meta.news, new { htmlAttributes = new { @Value = " " } })</td>
            <td>@Html.DisplayFor(modelItem => meta.gdpr, new { htmlAttributes = new { @Value = " " } })</td>
            <td>@Html.DisplayFor(modelItem => meta.created, new { htmlAttributes = new { @Value = " " } })</td>
            <td>@Html.DisplayFor(modelItem => meta.to_remove, new { htmlAttributes = new { @Value = " " } })</td>
            <td>@category</td>
            <td>@Html.DisplayFor(modelItem => meta.sum, new { htmlAttributes = new { @Value = " " } })</td>
        }
        else
        {
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
        }
    }
    @if (Model.AllUsersMetaModel.Where(u => u.userid == item.id).Count() == 0)
    {
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
    }


    <td align="center"> @Html.ActionLink("Editovať", "UserEdit", "Admin", new { id = item.id }, new { @class = "btn btn-warning", style = "color: #ffffff !important; font-size:13px;margin-right: 2px;" }) @Html.ActionLink(HttpUtility.HtmlDecode("&#215;"), "DeleteAccount", "Home", new { userId = item.id, confirm = true }, new { onclick = "return confirm('Naozaj chcete vymazať tohoto zamestnanca?')", @class = "btn btn-danger", data_toggle = "tooltip", data_placement = "top", title = "Kliknutím nenávratne vymažete zamestnanca." })</td>
    @{ var user = Model.AllWishlistModel.Where(i => i.userid == item.id).SingleOrDefault();
        if (user != null)
        {
            <td align="center"><a href="@Url.Action("Oblubene", "Admin", new { id = item.id })">@HttpUtility.HtmlDecode("&#10084;")</a></td>
        }
    }

</tr>
        }
    }


</table>

<script src="http://malsup.github.com/jquery.form.js"></script>

<script type="text/javascript">
    function validateForm() {
        var heslo = document.getElementById("heslo").value;
        var overheslo = document.getElementById("overheslo").value;
        var valid = true;

        if (heslo != overheslo) {
            document.getElementById("alert").style = "display: block;";
            valid = false;
        } else {
            document.getElementById("alert").style = "display: none;";
        }

        if ($("#UsersModel_Username").val() == "" || !checkUsername($("#UsersModel_Username").val()) || !isEmail($("#UsersModel_Username").val())) {
            $("#UsersModel_Username").addClass("error");

            valid = false;
        } else {
            $("#UsersModel_Username").removeClass("error");
        }

        return valid;
    }

    function isEmail(email) {
        var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return regex.test(email);
    }

    function checkUsername(email) {
        var bool = false;
        $.ajax({
            type: "POST",
            url: 'Admin/EmailExist',
            async: false,
            data: { email: email },
            success: function (response) {
                //call is successfully completed and we got result in data
                if (response.success) {
                    // success code here
                    bool = true;
                } else {
                    // error code here
                    bool = false;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //some errror, some show err msg to user and log the error
            }
        });
        return bool;
    }

</script>

