@using System.Globalization;
@model Cms.Models.ProductModel

@{
    Layout = "~/Views/Shared/_LayoutCms.cshtml";
    ViewBag.Title = "Editovať produkt";

    var sizes = "";
    var colors = "";
}
<style>
    .sidenav > a:nth-child(3) {
        border-left: 5px solid #00abe8;
        color: #f1f1f1;
        background-color: #464646;
    }

    .dropdown-container2 {
        display: block;
    }
</style>
<h2>Editovať produkt</h2>

@using (Html.BeginForm("UploadImages", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", style = "display:none !important;", placeholder = "Pôvodná cena" } })
    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", style = "display:none !important;", placeholder = "Pôvodná cena" } })
    sizes = Model.Custom4;
    colors = Model.Custom7;

    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                <div class="col-md-14">
                    <img src="~/Uploads/@Html.DisplayTextFor(model => model.Image)" alt="@Html.DisplayTextFor(model => model.Title)" style="width: 100%;" />
                </div>
            </div>
            <div class="col">
                <div class="col-md-14 btnvyber">
                    <strong>@Html.LabelFor(model => model.TitleImage, "Zmeniť titulnú fotografiu", htmlAttributes: new { @class = "control-label col-md-12 vyberf" })</strong>
                    <br /><br />
                    <a id="btn_vis" style="cursor:pointer">Vyber fotografie</a>
                    @Html.TextBoxFor(model => model.TitleImage, "", new { @type = "file", @class = "form-control", @accept = "png|jpg|jpeg|gif", @style = "max-width: 67%;height:60px;display:none;", @id = "bttn", @onchange = "pressed()" })
                    <label id="fileLabel">Nie je vybratá žiadna fotografia.</label>
                    @Html.ValidationMessageFor(model => model.TitleImage, "", new { @class = "text-danger" })
                </div>
                <br />
                <div class="form-group">
                    <div>
                        <input type="submit" value="Nahrať novú titulnú fotografiu" class="btn btn-success" onclick="validateForm();" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <hr />
}
@using (Html.BeginForm("EditProduct", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Názov produktu</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Názov" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Kategória</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Category, (IEnumerable<SelectListItem>)ViewData["kategoria"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Zaradenie</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)ViewData["zaradenie"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Výrobca</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Custom3, (IEnumerable<SelectListItem>)ViewData["znacka"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Custom3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Typ</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Custom8, (IEnumerable<SelectListItem>)ViewData["typ"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Custom8, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <!--
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Výkon</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Custom9, new { htmlAttributes = new { @class = "form-control", placeholder = "Výkon (kW)" } })
                        @Html.ValidationMessageFor(model => model.Custom9, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Plocha</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Custom10, new { htmlAttributes = new { @class = "form-control", placeholder = "Plocha (m2)" } })
                        @Html.ValidationMessageFor(model => model.Custom10, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Farebné varianty?</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="checkbox" name="colorvariable" id="colorvariable" value="" style="margin-top: 10px;" onclick="colorVariable();">
                    </div>
                </div>
            </div>
        </div>
        <div id="colorVariableProduct" class="row clrSection" style="display: none;">

            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Dostupné farebné varianty</strong>
                <a id="btnAddcolor"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDelcolor"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>

            <div id="colorSection1" class="colorSection row m-0 activeInputColor">
                <div class="mt-1 text-right" style="width: 15px;">
                </div>
                <div class="colorInput col-4">
                    <div class="form-group">
                        <div style="width: 150px;">
                            @Html.Editor("color", new { htmlAttributes = new { @class = "form-control", placeholder = "Farebná varianta" } })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
            </div>
        </div>
            -->
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Kód produktu</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", placeholder = "Kód produktu" } })
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="stock" style="display: flex;">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Stav skladu</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", placeholder = "Sklad (ks)" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-2" style="margin-left:-50px;">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Custom2, (IEnumerable<SelectListItem>)ViewData["mernaj"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Custom2, "", new { @class = "text-danger" })
                        <small>0 - momentálne vypredané, -1 - produkt na objednávku</small>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Hraničná hodnota</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Custom1, new { htmlAttributes = new { @class = "form-control", placeholder = "Hraničná hodnota skladu" } })
                        @Html.ValidationMessageFor(model => model.Custom1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Hmotnosť</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", placeholder = "Hmotnosť" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-2" style="margin-left:-50px;">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Weightunit, (IEnumerable<SelectListItem>)ViewData["hmotnostj"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Cena s DPH</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">

                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Cena" } })

                        @{
                            var hodnota = Model.Price;
                        }
                        @if (hodnota == "0")
                        {
                            <small>Momentálne pri produkte je informácia: Cena na vyžiadanie</small>
                        }
                        else
                        {
                            <small>Ak bude hodnota 0, pri produkte bude informácia: Cena na vyžiadanie</small>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!--
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Cena od?</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.CheckBoxFor(model => model.Custom6, new { style = "margin-top: 10px;" })
                    </div>
                </div>
            </div>
        </div>
        -->
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Akciová cena s DPH</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Discountprice, new { htmlAttributes = new { @class = "form-control", placeholder = "Akciová cena" } })
                        @Html.ValidationMessageFor(model => model.Discountprice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Heureka ?</strong>
            </div>
            <div class="col-4 mt-1">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.CheckBoxFor(model => model.Heureka, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Heureka, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div><div class="row">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Heureka darček ?</strong>
            </div>
            <div class="col-4 mt-1">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.CheckBoxFor(model => model.HeurekaDarcek, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HeurekaDarcek, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row d-none">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Heureka darček - text</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.HeurekaDarcekText, new { htmlAttributes = new { @class = "form-control", placeholder = "Heureka darček - text" } })
                        @Html.ValidationMessageFor(model => model.HeurekaDarcekText, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Odporúčaný produkt ?</strong>
            </div>
            <div class="col-4 mt-1">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.CheckBoxFor(model => model.Recommended, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Recommended, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Variabilný produkt?</strong>
            </div>
            <div class="col-4 mt-1">
                <div class="form-group">
                    <div class="col-md-3">
                        <!--<input type="checkbox" name="variableproduct" id="variableproduct" value="" style="margin-top: 10px;" onclick="checkVariable();">-->
                        <input type="checkbox" name="showVariants" id="showVariants" value="" style="margin-top: 5px;">
                    </div>
                </div>
            </div>
        </div>
        <!--
        <div class="row">
            <div class="col-2" id="underVariableProduct" style="display: none;">
                <div class="mt-1 text-right" style="width: 180px;">
                    <strong>Zobraziť veľkosti podprseniek?</strong>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="checkbox" name="variableunderwear" id="variableunderwear" value="" style="margin-top: 10px;" onclick="checkVariable();">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2" id="shoeVariableProduct" style="display: none;">
                <div class="mt-1 text-right" style="width: 180px;">
                    <strong>Zobraziť veľkosti tenisiek?</strong>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="checkbox" name="variableshoes" id="variableshoes" value="" style="margin-top: 10px;" onclick="checkVariable();">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        -->
        <hr />
        <div id="univerzalVariableProduct" class="row pl-5" style="display: none;">

            @Html.HiddenFor(model => model.Variants)
            @{
                string variantsIdStr = "";
                foreach (int attrId in (List<int>)ViewData["vlastnostiId"])
                {
                    variantsIdStr += attrId.ToString() + ",";
                }
                @Html.Hidden("attributesId", variantsIdStr);
            }

            <div class="mt-1 pb-3 row col-12">
                <strong>Varianty</strong>
                <a id="btnAddVar"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDelVar"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>

            <div num="1" class="clonedVarSection row m-0 activeInputSize" style="width:90%;">
                @Html.Hidden("varNum1", 1, new { @class = "varNum" })
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.DropDownList("varAttrs1", (IEnumerable<SelectListItem>)ViewData["vlastnosti"], new { @class = "form-control varAttrs" })
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            <select class="form-control varAttrsValues " id="varAttrsValues1" name="varAttrsValues1">
                            </select>
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("varNumber1", new { htmlAttributes = new { @class = "form-control varNumber", placeholder = "Katalógové číslo" } })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("varStock1", new { htmlAttributes = new { @class = "form-control varStock", placeholder = "Na sklade" } })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("varPrice1", new { htmlAttributes = new { @class = "form-control varPrice", placeholder = "Cena s DPH" } })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("varDiscountPrice1", new { htmlAttributes = new { @class = "form-control varDiscountPrice", placeholder = "Akciová cena s DPH" } })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--
        <div id="regularVariableProduct" class="row cloneSection pl-5" style="display: none;">

            <div class="mt-1 pb-3 row col-12">
                <strong>Dostupné veľkosti / varianty</strong>
                <a id="btnAdd"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDel"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>

            <div id="clonedSection1" class="clonedSection row m-0 activeInputSize" style="width: 800px;">
                <div class="clonedInput">
                    <div class="form-group">
                        <div style="width: 150px;">
                            @Html.DropDownList("size1", (IEnumerable<SelectListItem>)ViewData["velkost"], new { @class = "form-control select-box" })
                            @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="clonedInputTwo">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("stock", new { htmlAttributes = new { @class = "form-control", placeholder = "Ks na sklade" } })
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div id="shoesVariableProduct" class="row shoeSection pl-5" style="display: none;">

            <div class="mt-1 pb-3 row col-12">
                <strong>Dostupné veľkosti / varianty</strong>
                <a id="btnAdd3"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDel3"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>

            <div id="shoesSection1" class="shoesSection row m-0 activeInputShoes" style="width: 800px;">
                <div class="shoesInput">
                    <div class="form-group">
                        <div style="width: 150px;">
                            @Html.DropDownList("size1", (IEnumerable<SelectListItem>)ViewData["shoes"], new { @class = "form-control select-box" })
                            @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="shoesInputTwo">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("stock", new { htmlAttributes = new { @class = "form-control", placeholder = "Ks na sklade" } })
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="underwearVariableProduct" class="row undersection pl-5" style="display: none;">

            <div class="mt-1 pb-3 row col-12">
                <strong>Dostupné veľkosti / varianty</strong>
                <a id="btnAdd2"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDel2"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>
            <div id="underwearSection1" class="underwearSection row m-0 activeInput" style="width: 800px;">
                <div class="underwearInput">
                    <div class="form-group">
                        <div style="width: 150px;">
                            @Html.DropDownList("size1", (IEnumerable<SelectListItem>)ViewData["kosiky"], new { @class = "form-control select-box" })
                            @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="underwearInputTree">
                    <div class="form-group">
                        <div style="width: 150px;margin-left: 20px;">
                            @Html.DropDownList("size2", (IEnumerable<SelectListItem>)ViewData["obvod"], new { @class = "form-control select-box2" })
                            @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="underwearInputTwo">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("stock", new { htmlAttributes = new { @class = "form-control", placeholder = "Ks na sklade" } })
                            @Html.ValidationMessageFor(model => model.Custom3, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        -->
        <hr />
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <strong>@Html.LabelFor(model => model.Description, "Popis produktu", htmlAttributes: new { @class = "control-label col-md-2" })</strong>

                    <div class="col-md-11">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 6 })
                    </div>
                </div>
            </div>
        </div>

        @Html.EditorFor(model => model.Custom4, new { htmlAttributes = new { @class = "form-control", placeholder = "velkossti", id = "finalsizes", style = "display:none;" } })
        @*check if is product variable 1 = variable*@
        @Html.EditorFor(model => model.Custom5, new { htmlAttributes = new { @class = "form-control", id = "variableprod", style = "display:none;", @Value = "0" } })
        @Html.EditorFor(model => model.Custom7, new { htmlAttributes = new { @class = "form-control", placeholder = "", id = "finalcolors", style = "display:none;" } })

        <div class="form-group">
            <div style="text-align:right">
                <input type="submit" value="Uložiť zmeny" id="btnSubmit" class="btn btn-success" />
            </div>
        </div>
    </div>
}
<hr />
@using (Html.BeginForm("UploadImages", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", style = "display:none !important;", placeholder = "Pôvodná cena" } })
        @Html.EditorFor(model => model.Gallery, new { htmlAttributes = new { @class = "form-control hidden", style = "display:none !important;", placeholder = "Pôvodná cena" } })

        <strong>@Html.LabelFor(model => model.ImageGallery, "Pridať obrázky do fotogalérie", htmlAttributes: new { @class = "control-label col-md-8 vyberf" })</strong>
        <br /><br />
        <div class="col-md-14 btnvyber">
            <a id="bttn_vis" style="cursor:pointer">Vyber fotografie</a>
            @Html.TextBoxFor(model => model.ImageGallery, "", new { @type = "file", @class = "form-control", @multiple = "multiple", @accept = "png|jpg|jpeg|gif", @style = "max-width: 67%;height:60px;display:none;", @id = "btttn", @onchange = "press()" })
            <label id="fileLabell">Nie je vybratá žiadna fotografia.</label>
            @Html.ValidationMessageFor(model => model.ImageGallery, "", new { @class = "text-danger" })
        </div>
        <br />
    </div>
    <div class="form-group">
        <div>
            <input type="submit" value="Nahrať do galérie" class="btn btn-success" onclick="validateForm();" />
        </div>
    </div>
    <section id="galleria">
        <div class="jumbotron">
            @if (Directory.Exists(Server.MapPath("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery))))
            {
                foreach (var imgPath in Directory.GetFiles(Server.MapPath("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery))))
                {
                    var img = new FileInfo(imgPath);
                    <a href="@Url.Content(String.Format("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery) + "{0}", img.Name))" data-toggle="lightbox" data-gallery="example-gallery" style="padding:5px 1px 0 0;display: inline-block;width:24%;">
                        <img style="width:100%; height:250px;float:left;object-fit: cover;" src="@Url.Content(String.Format("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery) + "{0}", img.Name))" class="img-fluid" />
                    </a>
                    @Html.ActionLink(HttpUtility.HtmlDecode("&#215;"), "DeletePicture", new { url = String.Format("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery) + "{0}", img.Name), id = @Html.DisplayTextFor(model => model.Id) }, new { onclick = "return confirm('Naozaj chcete vymazať fotografiu?')", @class = "btn btn-danger", data_toggle = "tooltip", data_placement = "top", title = "Kliknutím nenávratne vymažete fotografiu.", style = "position: absolute; margin-left:-50px; margin-top: 5px;" })
                }
            }
            else
            { }
            <ul class="list-group" id="uploadedFiles"></ul>
        </div>
    </section>
}

<script>
    $(document).ready(function () {

        $(document).on("change", ".varAttrs", function () {
            initAttrValues($(this).parents(".clonedVarSection").attr("num"), $(this).find("option:selected").attr("attr_id"));
        });

        function initAttrValues(num, attrId) {

            $("select[name=varAttrsValues" + num + "] option").remove();

            $values = JSON.parse($("#varAttrs" + num + " option:selected").val());

            for ($j = 0; $j < $values.length; $j++) {
                $("#varAttrsValues" + num).append('<option value="' + $values[$j].name + '">' + $values[$j].name + '</option>')
            }

            //ak to nie je rovnake ako prvy typ varianty tak nie je mozne upravit cenu
            $firstAttrId = $(".varAttrs option").eq(0).attr("attr_id");
            if (attrId != null && attrId != $firstAttrId) {
                $(".clonedVarSection[num=" + num + "] .varPrice").val("").prop("disabled", true);
                $(".clonedVarSection[num=" + num + "] .varDiscountPrice").val("").prop("disabled", true);
            } else if (attrId != null && attrId == $firstAttrId) {
                $(".clonedVarSection[num=" + num + "] .varPrice").prop("disabled", false);
                $(".clonedVarSection[num=" + num + "] .varDiscountPrice").prop("disabled", false);
            }
        }

        //doplnenie IDeciek pre vlastnosti
        $varCounter = 0;
        $varIdsStr = $("#attributesId").val().split(",");
        $("select.varAttrs option").each(function () {
            $(this).attr("attr_id", $varIdsStr[$varCounter]);
            $varCounter++;
        });

        $("#showVariants").click(function () {
            if ($("#showVariants").is(":checked")) {
                $("#univerzalVariableProduct").css("display", "flex");
            } else {
                $("#univerzalVariableProduct").css("display", "none");
            }
        });

        //Pridanie alebo vymazanie poslednej varianty
        $('#btnAddVar').click(function () {
            var num = $('.clonedVarSection').length;
            var newNum = new Number(num + 1);

            var prevSection = $('.clonedVarSection[num=' + num + ']');
            var newSection = $('.clonedVarSection[num=' + num + ']').clone().attr('num', newNum);

            newSection.find("select.varAttrs").attr("name", "varAttrs" + newNum).attr("id", "varAttrs" + newNum).val(prevSection.find("select.varAttrs").val());
            newSection.find("select.varAttrsValues").attr("name", "varAttrsValues" + newNum).attr("id", "varAttrsValues" + newNum);
            newSection.find("input.varNumber").attr("name", "varNumber" + newNum).attr("id", "varNumber" + newNum);
            newSection.find("input.varStock").attr("name", "varStock" + newNum).attr("id", "varStock" + newNum);
            newSection.find("input.varPrice").attr("name", "varPrice" + newNum).attr("id", "varPrice" + newNum);
            newSection.find("input.varDiscountPrice").attr("name", "varDiscountPrice" + newNum).attr("id", "varDiscountPrice" + newNum);

            $('#univerzalVariableProduct').append(newSection);

            $('#btnDelVar').attr('style', 'display:inline-block');

            if (newNum == 10)
                $('#btnAddVar').attr('disabled', 'disabled');
        });

        $('#btnDelVar').click(function () {
            var num = $('.clonedVarSection').length; // how many "duplicatable" input fields we currently have
            $('.clonedVarSection[num=' + num + ']').remove();     // remove the last element

            // enable the "add" button
            $('#btnAddVar').attr('disabled', '');

            // if only one element remains, disable the "remove" button
            if (num - 1 == 1)
                $('#btnDelVar').attr('style', 'display:none');
        });

        $('#btnDelVar').attr('style', 'display:none');

        //inicializacia variant ak existuju
        if ($("#Variants").val() != "[]") {

            $variants = JSON.parse($("#Variants").val());
            //console.log($variants);

            for ($i = 1; $i <= $variants.length; $i++) {

                //ak neexistuju inputy pre variantu, vytvorime ich
                if (!$(".clonedVarSection[num=" + $i + "]").length) {
                    $('#btnAddVar').click();
                }

                //console.log($(this).attribute_id);

                $(".clonedVarSection[num=" + $i + "]").find("select.varAttrs option[attr_id=" + $variants[$i - 1].attribute_id + "]").prop('selected', true);

                initAttrValues($i, $variants[$i - 1].attribute_id);

                $(".clonedVarSection[num=" + $i + "]").find("input.varNum").val($variants[$i - 1].num);
                $(".clonedVarSection[num=" + $i + "]").find("select.varAttrsValues").val($variants[$i - 1].value);
                $(".clonedVarSection[num=" + $i + "]").find("input.varNumber").val($variants[$i - 1].number);
                $(".clonedVarSection[num=" + $i + "]").find("input.varStock").val($variants[$i - 1].stock);

                //vyplnime hodnoty cien len ak su varianty takeho typu ako uplne prva varianta
                $firstAttrId = $(".varAttrs option").eq(0).attr("attr_id");
                if ($variants[$i - 1].attribute_id == $firstAttrId) {
                    $(".clonedVarSection[num=" + $i + "]").find("input.varPrice").val($variants[$i - 1].price);
                    $(".clonedVarSection[num=" + $i + "]").find("input.varDiscountPrice").val($variants[$i - 1].discountprice);
                }
            }

            $("#showVariants").click();
        } else {
            //inicializacia hodnot pre vlastnosti
            initAttrValues(1);
        }

    });
</script>


<script type="text/javascript">
    // Initialize your tinyMCE Editor with your preferred options
    tinyMCE.init({
        // General options
        mode: "textareas",
        theme: "modern",
        branding: false,
        elementpath: false,
        height: 300,
        convert_fonts_to_spans: false,
        entity_encoding: "numeric",
        selector: "textarea",
        plugins:
            'print preview searchreplace autolink directionality visualblocks visualchars fullscreen link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists textcolor wordcount image contextmenu colorpicker textpattern help imagetools save insertdatetime preview media searchreplace print contextmenu paste directionality fullscreen noneditable visualchars nonbreaking template wordcount advlist autosave',
        toolbar1:
            'formatselect | bold italic strikethrough forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat | mybutton | upload',

        templates: [
            { title: 'Test template 1', content: 'Test 1' },
            { title: 'Test template 2', content: 'Test 2' }
        ],
        content_css: "/Content/Site.css",
        paste_data_images: false,
        images_upload_url: '/upload-image',
        images_upload_base_path: '/Uploads/images',
        setup: function (editor) {
            var inp = $('<input id="tinymce-uploader" type="file" name="pic" style="display:none">');
            $(editor.getElement()).parent().append(inp);

            inp.on("change",
                function () {
                    uploadFile($(this), editor);
                });

            editor.addButton('upload',
                {
                    text: "Nahrať PDF",
                    icon: false,
                    onclick: function (e) {
                        inp.trigger('click');
                    }
                });
        }
    });

    function uploadFile(inp, editor) {
        var input = inp.get(0);
        var data = new FormData();
        data.append('file', input.files[0]);

        $.ajax({
            url: '/upload-image',
            type: 'POST',
            data: data,
            processData: false, // Don't process the files
            contentType:
                false, // Set content type to false as jQuery will tell the server its a query string request
            success: function (data, textStatus, jqXHR) {
                editor.insertContent('<a target="_blank" class="content-img" href="/Uploads/images/' + data.location + '">Pomenuj svoje PDF. (Klikni pravým tlačidlom, stlač Link a uprav sekciu Text to display)</a>');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                if (jqXHR.responseText) {
                    errors = JSON.parse(jqXHR.responseText).errors
                    alert('Error uploading image: ' +
                        errors.join(", ") +
                        '. Make sure the file is an image and has extension jpg/jpeg/png.');
                }
            }
        });
    }


</script>

<script src="/Scripts/umd/popper.min.js"></script>
<script src="/Scripts/bootstrap.min.js"></script>

<script src="http://malsup.github.com/jquery.form.js"></script>

<script>
    $("#btn_vis").click(function () {
        $("#bttn").trigger('click');
    });

    window.pressed = function () {
        var a = document.getElementById('bttn');
        if (a.files.length > 1) {
            fileLabel.innerHTML = "Boli vybraté " + a.files.length + " fotografie.";
        } else if (a.files.length = 1) {
            fileLabel.innerHTML = "Bola vybratá " + a.files.length + " fotografia.";
        }
    };

    $("#bttn_vis").click(function () {
        $("#btttn").trigger('click');
    });

    window.press = function () {
        var a = document.getElementById('btttn');
        if (a.files.length > 1) {
            fileLabell.innerHTML = "Boli vybraté " + a.files.length + " fotografie.";
        } else if (a.files.length = 1) {
            fileLabell.innerHTML = "Bola vybratá " + a.files.length + " fotografia.";
        }
    };

    function validatePrices() {
        $valid = true;

        $("#Price").val($("#Price").val().replace(",", "."));
        $("#Discountprice").val($("#Discountprice").val().replace(",", "."));

        if ($("#Price").val() == "" || !$.isNumeric($("#Price").val())) {
            $("#Price").addClass("error");

            $valid = false;
        } else {
            $("#Price").removeClass("error");

            $("#Price").val(parseFloat($("#Price").val()));
        }

        if ($("#Discountprice").val() != "" && !$.isNumeric($("#Discountprice").val())) {
            $("#Discountprice").addClass("error");

            $valid = false;
        } else {
            $("#Discountprice").removeClass("error");

            if ($("#Discountprice").val() != "") {
                $("#Discountprice").val(parseFloat($("#Discountprice").val()));
            }
        }

        if ($("#showVariants").is(":checked")) {
            $num = $(".clonedVarSection").length;

            for ($i = 1; $i <= $num; $i++) {

                $varPrice = $(".clonedVarSection[num=" + $i + "]").find(".varPrice").val();
                $varDiscountprice = $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").val();

                if ($varPrice != "" && !$.isNumeric($varPrice.replace(",", "."))) {
                    $(".clonedVarSection[num=" + $i + "]").find(".varPrice").addClass("error");

                    $valid = false;
                } else {
                    $(".clonedVarSection[num=" + $i + "]").find(".varPrice").removeClass("error");

                    if ($varPrice != "") {
                        $(".clonedVarSection[num=" + $i + "]").find(".varPrice").val(parseFloat($varPrice.replace(",", ".")));
                    }
                }

                if ($varDiscountprice != "" && !$.isNumeric($varDiscountprice.replace(",", "."))) {
                    $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").addClass("error");

                    $valid = false;
                } else {
                    $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").removeClass("error");

                    if ($varDiscountprice != "") {
                        $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").val(parseFloat($varDiscountprice.replace(",", ".")));
                    }
                }
            }
        }

        return $valid;
    }

    /*SIZES- Create JSON and send to database*/
    $(document).ready(function () {
        $('#btnSubmit').click(function (e) {

            e.preventDefault();

            if (validatePrices()) {
                //ulozenie variant do JSONU ako string
                if ($("#showVariants").is(":checked")) {
                    $num = $(".clonedVarSection").length;
                    $variants = [];

                    for ($i = 1; $i <= $num; $i++) {

                        $varNum = parseInt($(".clonedVarSection[num=" + $i + "]").find(".varNum").val());
                        $varAttrs = $(".clonedVarSection[num=" + $i + "]").find(".varAttrs option:selected").attr("attr_id");
                        $varAttrsValues = $(".clonedVarSection[num=" + $i + "]").find(".varAttrsValues").val();
                        $varNumber = $(".clonedVarSection[num=" + $i + "]").find(".varNumber").val();
                        $varStock = $(".clonedVarSection[num=" + $i + "]").find(".varStock").val();
                        $varPrice = $(".clonedVarSection[num=" + $i + "]").find(".varPrice").val();
                        $varDiscountPrice = $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").val();

                        $variants.push({ "num": $varNum, "attrId": $varAttrs, "attrValues": $varAttrsValues, "number": $varNumber, "stock": $varStock, "price": $varPrice, "discountprice": $varDiscountPrice });
                    }

                    $("#Variants").val(JSON.stringify($variants));
                } else {
                    $("#Variants").val("[]");
                }

                $(this).parents("form").submit();
            }
        });
    });

</script>

