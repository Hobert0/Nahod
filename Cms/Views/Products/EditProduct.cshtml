@model Cms.Models.ProductModel

@{
    Layout = "~/Views/Shared/_LayoutCms.cshtml";
    ViewBag.Title = "Editovať produkt";

    var sizes = "";
    var colors = "";
}
<style>
    .sidenav > a:nth-child(3) {
        border-left: 5px solid #00abe8;
        color: #f1f1f1;
        background-color: #464646;
    }

    .dropdown-container2 {
        display: block;
    }
</style>
<h2>Editovať produkt</h2>

@using (Html.BeginForm("UploadImages", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", style = "display:none !important;", placeholder = "Pôvodná cena" } })
    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", style = "display:none !important;", placeholder = "Pôvodná cena" } })
    sizes = Model.Custom4;
    colors = Model.Custom7;

    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                <div class="col-md-14">
                    <img src="~/Uploads/@Html.DisplayTextFor(model => model.Image)" alt="@Html.DisplayTextFor(model => model.Title)" style="width: 100%;" />
                </div>
            </div>
            <div class="col">
                <div class="col-md-14 btnvyber">
                    <strong>@Html.LabelFor(model => model.TitleImage, "Zmeniť titulnú fotografiu", htmlAttributes: new { @class = "control-label col-md-12 vyberf" })</strong>
                    <br /><br />
                    <a id="btn_vis" style="cursor:pointer">Vyber fotografie</a>
                    @Html.TextBoxFor(model => model.TitleImage, "", new { @type = "file", @class = "form-control", @accept = "png|jpg|jpeg|gif", @style = "max-width: 67%;height:60px;display:none;", @id = "bttn", @onchange = "pressed()" })
                    <label id="fileLabel">Nie je vybratá žiadna fotografia.</label>
                    @Html.ValidationMessageFor(model => model.TitleImage, "", new { @class = "text-danger" })
                </div>
                <br />
                <div class="form-group">
                    <div>
                        <input type="submit" value="Nahrať novú titulnú fotografiu" class="btn btn-success" onclick="validateForm();" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <hr />
}
@using (Html.BeginForm("EditProduct", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">

    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Názov produktu</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Názov" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Kategória</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Category, (IEnumerable<SelectListItem>)ViewData["kategoria"], new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Značka</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Custom3, (IEnumerable<SelectListItem>)ViewData["znacka"], new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Custom3, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Typ</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Custom8, (IEnumerable<SelectListItem>)ViewData["typ"], new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Custom8, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Výkon</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Custom9, new { htmlAttributes = new { @class = "form-control", placeholder = "Výkon (kW)" } })
                    @Html.ValidationMessageFor(model => model.Custom9, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Plocha</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Custom10, new { htmlAttributes = new { @class = "form-control", placeholder = "Plocha (m2)" } })
                    @Html.ValidationMessageFor(model => model.Custom10, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Farebné varianty?</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    <input type="checkbox" name="colorvariable" id="colorvariable" value="" style="margin-top: 10px;" onclick="colorVariable();">
                </div>
            </div>
        </div>
    </div>
    <div id="colorVariableProduct" class="row clrSection" style="display: none;">

        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Dostupné farebné varianty</strong>
            <a id="btnAddcolor"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDelcolor"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
        </div>

        <div id="colorSection1" class="colorSection row m-0 activeInputColor">
            <div class="mt-1 text-right" style="width: 15px;">
            </div>
            <div class="colorInput col-4">
                <div class="form-group">
                    <div style="width: 150px;">
                        @Html.Editor("color", new { htmlAttributes = new { @class = "form-control", placeholder = "Farebná varianta" } })
                        <input type="hidden" value="1" id="total_chq">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Kód produktu</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", placeholder = "Kód produktu" } })
                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="stock" style="display: flex;">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Stav skladu</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", placeholder = "Sklad (ks)" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-2" style="margin-left:-50px;">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Custom2, (IEnumerable<SelectListItem>)ViewData["mernaj"], new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Custom2, "", new { @class = "text-danger" })
                    <small>0 - momentálne vypredané, -1 - produkt na objednávku</small>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Hraničná hodnota</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Custom1, new { htmlAttributes = new { @class = "form-control", placeholder = "Hraničná hodnota skladu" } })
                    @Html.ValidationMessageFor(model => model.Custom1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Hmotnosť</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", placeholder = "Hmotnosť" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-2" style="margin-left:-50px;">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Weightunit, (IEnumerable<SelectListItem>)ViewData["hmotnostj"], new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Cena s DPH</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Cena" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    @{
                        var hodnota = Model.Price;
                    }
                    @if (hodnota == "0")
                    {
                        <small>Momentálne pri produkte je informácia: Cena na vyžiadanie</small>
                    }
                    else
                    {
                        <small>Ak bude hodnota 0, pri produkte bude informácia: Cena na vyžiadanie</small>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Cena od?</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.CheckBoxFor(model => model.Custom6, new { style = "margin-top: 10px;" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 180px;">
            <strong>Akciová cena s DPH</strong>
        </div>
        <div class="col-4">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Discountprice, new { htmlAttributes = new { @class = "form-control", placeholder = "Akciová cena" } })
                    @Html.ValidationMessageFor(model => model.Discountprice, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mt-1 text-right" style="width: 200px;">
            <strong>Odporúčaný produkt ?</strong>
        </div>
        <div class="col-4 mt-1">
            <div class="form-row">
                <div class="col-md-3">
                    @Html.CheckBoxFor(model => model.Recommended, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Recommended, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col">
            <div class="form-group">
                <strong>@Html.LabelFor(model => model.Description, "Popis produktu", htmlAttributes: new { @class = "control-label col-md-2" })</strong>

                <div class="col-md-11">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 6 })
                </div>
            </div>
        </div>
    </div>

    @Html.EditorFor(model => model.Custom4, new { htmlAttributes = new { @class = "form-control", placeholder = "velkossti", id = "finalsizes", style = "display:none;" } })
    @*check if is product variable 1 = variable*@
    @Html.EditorFor(model => model.Custom5, new { htmlAttributes = new { @class = "form-control", id = "variableprod", style = "display:none;", @Value = "0" } })
    @Html.EditorFor(model => model.Custom7, new { htmlAttributes = new { @class = "form-control", placeholder = "", id = "finalcolors", style = "display:none;" } })

    <div class="form-group">
        <div style="text-align:right">
            <input type="submit" value="Uložiť zmeny" id="btnSubmit" class="btn btn-success" />
        </div>
    </div>
</div>
}
<hr />
@using (Html.BeginForm("UploadImages", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", style = "display:none !important;", placeholder = "Pôvodná cena" } })
        @Html.EditorFor(model => model.Gallery, new { htmlAttributes = new { @class = "form-control hidden", style = "display:none !important;", placeholder = "Pôvodná cena" } })

        <strong>@Html.LabelFor(model => model.ImageGallery, "Pridať obrázky do fotogalérie", htmlAttributes: new { @class = "control-label col-md-8 vyberf" })</strong>
        <br /><br />
        <div class="col-md-14 btnvyber">
            <a id="bttn_vis" style="cursor:pointer">Vyber fotografie</a>
            @Html.TextBoxFor(model => model.ImageGallery, "", new { @type = "file", @class = "form-control", @multiple = "multiple", @accept = "png|jpg|jpeg|gif", @style = "max-width: 67%;height:60px;display:none;", @id = "btttn", @onchange = "press()" })
            <label id="fileLabell">Nie je vybratá žiadna fotografia.</label>
            @Html.ValidationMessageFor(model => model.ImageGallery, "", new { @class = "text-danger" })
        </div>
        <br />
    </div>
    <div class="form-group">
        <div>
            <input type="submit" value="Nahrať do galérie" class="btn btn-success" onclick="validateForm();" />
        </div>
    </div>
    <section id="galleria">
        <div class="jumbotron">
            @if (Directory.Exists(Server.MapPath("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery))))
            {
                foreach (var imgPath in Directory.GetFiles(Server.MapPath("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery))))
                {
                    var img = new FileInfo(imgPath);
                    <a href="@Url.Content(String.Format("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery) + "{0}", img.Name))" data-toggle="lightbox" data-gallery="example-gallery" style="padding:5px 1px 0 0;display: inline-block;width:24%;">
                        <img style="width:100%; height:250px;float:left;object-fit: cover;" src="@Url.Content(String.Format("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery) + "{0}", img.Name))" class="img-fluid" />
                    </a>
                    @Html.ActionLink(HttpUtility.HtmlDecode("&#215;"), "DeletePicture", new { url = String.Format("~/Uploads/" + @Html.DisplayTextFor(model => model.Gallery) + "{0}", img.Name), id = @Html.DisplayTextFor(model => model.Id) }, new { onclick = "return confirm('Naozaj chcete vymazať fotografiu?')", @class = "btn btn-danger", data_toggle = "tooltip", data_placement = "top", title = "Kliknutím nenávratne vymažete fotografiu.", style = "position: absolute; margin-left:-50px; margin-top: 5px;" })
                }
            }
            else
            { }
            <ul class="list-group" id="uploadedFiles"></ul>
        </div>
    </section>
}

<script type="text/javascript">
    // Initialize your tinyMCE Editor with your preferred options
    tinyMCE.init({
        // General options
        mode: "textareas",
        theme: "modern",
        branding: false,
        elementpath: false,
        height: 300,
        convert_fonts_to_spans: false,
        entity_encoding: "numeric",
        selector: "textarea",
        plugins:
            'print preview searchreplace autolink directionality visualblocks visualchars fullscreen link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists textcolor wordcount image contextmenu colorpicker textpattern help imagetools save insertdatetime preview media searchreplace print contextmenu paste directionality fullscreen noneditable visualchars nonbreaking template wordcount advlist autosave',
        toolbar1:
            'formatselect | bold italic strikethrough forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat | mybutton | upload',

        templates: [
            { title: 'Test template 1', content: 'Test 1' },
            { title: 'Test template 2', content: 'Test 2' }
        ],
        content_css: "/Content/Site.css",
        paste_data_images: false,
        images_upload_url: '/upload-image',
        images_upload_base_path: '/Uploads/images',
        setup: function (editor) {
            var inp = $('<input id="tinymce-uploader" type="file" name="pic" style="display:none">');
            $(editor.getElement()).parent().append(inp);

            inp.on("change",
                function () {
                    uploadFile($(this), editor);
                });

            editor.addButton('upload',
                {
                    text: "Nahrať PDF",
                    icon: false,
                    onclick: function (e) {
                        inp.trigger('click');
                    }
                });
        }
    });

    function uploadFile(inp, editor) {
        var input = inp.get(0);
        var data = new FormData();
        data.append('file', input.files[0]);

        $.ajax({
            url: '/upload-image',
            type: 'POST',
            data: data,
            processData: false, // Don't process the files
            contentType:
                false, // Set content type to false as jQuery will tell the server its a query string request
            success: function (data, textStatus, jqXHR) {
                editor.insertContent('<a target="_blank" class="content-img" href="/Uploads/images/' + data.location + '">Pomenuj svoje PDF. (Klikni pravým tlačidlom, stlač Link a uprav sekciu Text to display)</a>');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                if (jqXHR.responseText) {
                    errors = JSON.parse(jqXHR.responseText).errors
                    alert('Error uploading image: ' +
                        errors.join(", ") +
                        '. Make sure the file is an image and has extension jpg/jpeg/png.');
                }
            }
        });
    }


</script>

<script src="/Scripts/umd/popper.min.js"></script>
<script src="/Scripts/bootstrap.min.js"></script>

<script src="http://malsup.github.com/jquery.form.js"></script>

<script>
    $("#btn_vis").click(function() {
        $("#bttn").trigger('click');
    });

    window.pressed = function() {
        var a = document.getElementById('bttn');
        if (a.files.length > 1) {
            fileLabel.innerHTML = "Boli vybraté " + a.files.length + " fotografie.";
        } else if (a.files.length = 1) {
            fileLabel.innerHTML = "Bola vybratá " + a.files.length + " fotografia.";
        }
    };

    $("#bttn_vis").click(function() {
        $("#btttn").trigger('click');
    });

    window.press = function() {
        var a = document.getElementById('btttn');
        if (a.files.length > 1) {
            fileLabell.innerHTML = "Boli vybraté " + a.files.length + " fotografie.";
        } else if (a.files.length = 1) {
            fileLabell.innerHTML = "Bola vybratá " + a.files.length + " fotografia.";
        }
    };

    /*GET SIZES from database*/
    if ('@sizes' != "") {
        document.getElementById('variableproduct').checked = true;
        checkVariable();

        var j = '@Html.Raw(sizes)';
        var json = $.parseJSON(j);
        var countofsize = json.length;
        var inputs = "";
        $(json).each(function (i, val) {
        if (val.size2 != null) {
            inputs = "bra";
        } else if (!isNaN(val.size1)) {
            inputs = "shoes";
        }
        });
        clonesection(countofsize, inputs);

        var counter = 1;
        $(json).each(function (i, val) {
            console.log(val.size1 + " " + val.size2 + " " + val.stock);
            if (val.size2 == null && isNaN(val.size1)) {
                document.getElementById('clonedSection' + counter.toString()).getElementsByClassName('select-box')[0]
                    .value = val.size1;
                document.getElementById('clonedSection' + counter.toString()).getElementsByClassName('text-box')[0]
                    .value = val.stock;
                counter++;
            } else if (val.size2 == null && !isNaN(val.size1)) {
                document.getElementById('variableshoes').checked = true;
                checkVariable();
                document.getElementById('shoesSection' + counter.toString()).getElementsByClassName('select-box')[0]
                    .value = val.size1;
                document.getElementById('shoesSection' + counter.toString()).getElementsByClassName('text-box')[0]
                    .value = val.stock;
                counter++;
            }else {
                document.getElementById('variableunderwear').checked = true;
                checkVariable();
                document.getElementById('underwearSection' + counter.toString()).getElementsByClassName('select-box')[0]
                    .value = val.size1;
                document.getElementById('underwearSection' + counter.toString()).getElementsByClassName('select-box2')[0]
                    .value = val.size2;
                document.getElementById('underwearSection' + counter.toString()).getElementsByClassName('text-box')[0]
                    .value = val.stock;
                counter++;
            }
        });


    }

    /**Clone section by sizes*/
    function clonesection(countofsize, inputs) {
        if (inputs == "") {
            for (i = 0; i < countofsize - 1; i++) {
                var num = $('.clonedSection').length;
                var newNum = new Number(num + 1);

                var newSection = $('#clonedSection' + num).clone().attr('id', 'clonedSection' + newNum);

                newSection.children(':first').children(':first').attr('id', 'name' + newNum)
                    .attr('name', 'name' + newNum);
                newSection.children(':nth-child(2)').children(':first').attr('id', 'nameTwo' + newNum)
                    .attr('name', 'nameTwo' + newNum);

                $('.cloneSection').last().append(newSection);

                $('#btnDel').attr('style', 'display:inline-block');

                if (newNum == 10)
                    $('#btnAdd').attr('disabled', 'disabled');
            }
        } else if (inputs == "bra"){
            for (i = 0; i < countofsize - 1; i++) {
                var num = $('.underwearSection').length;
                var newNum = new Number(num + 1);

                var newSection = $('#underwearSection' + num).clone().attr('id', 'underwearSection' + newNum);

                newSection.children(':first').children(':first').attr('id', 'name' + newNum)
                    .attr('name', 'name' + newNum);
                newSection.children(':nth-child(2)').children(':first').attr('id', 'nameTwo' + newNum)
                    .attr('name', 'nameTwo' + newNum);

                $('.undersection').last().append(newSection);

                $('#btnDel').attr('style', 'display:inline-block');

                if (newNum == 10)
                    $('#btnAdd').attr('disabled', 'disabled');
            }
        }
                        else if (inputs == "colors") {
            for (i = 0; i < countofsize - 1; i++) {
                var num = $('.colorSection').length;
                var newNum = new Number(num + 1);

                var newSection = $('#colorSection' + num).clone().attr('id', 'colorSection' + newNum);

                newSection.children(':first').children(':first').attr('id', 'name' + newNum)
                    .attr('name', 'name' + newNum);
                newSection.children(':nth-child(2)').children(':first').attr('id', 'nameTwo' + newNum)
                    .attr('name', 'nameTwo' + newNum);

                $('.clrSection').last().append(newSection);

                $('#btnDelcolor').attr('style', 'display:inline-block');

                if (newNum == 10)
                    $('#btnAddcolor').attr('disabled', 'disabled');
                }

        }
            else {
                for (i = 0; i < countofsize - 1; i++) {
                    var num = $('.shoesSection').length;
                    var newNum = new Number(num + 1);

                    var newSection = $('#shoesSection' + num).clone().attr('id', 'shoesSection' + newNum);

                    newSection.children(':first').children(':first').attr('id', 'name' + newNum)
                        .attr('name', 'name' + newNum);
                    newSection.children(':nth-child(2)').children(':first').attr('id', 'nameTwo' + newNum)
                        .attr('name', 'nameTwo' + newNum);

                    $('.shoeSection').last().append(newSection);

                    $('#btnDel3').attr('style', 'display:inline-block');

                    if (newNum == 10)
                        $('#btnAdd3').attr('disabled', 'disabled');
                }
        }
    }


    /*ADD/REMOVE SIZE FIELDS*/
    function checkVariable()
    {
        if (document.getElementById('variableproduct').checked)
        {
            document.getElementById('variableprod').value = '1';
            document.getElementById('regularVariableProduct').style.display = 'flex';
            document.getElementById('underVariableProduct').style.display = 'flex';
            document.getElementById('shoeVariableProduct').style.display = 'flex';
            document.getElementById('stock').style.display = 'none';

            if (document.getElementById('variableunderwear').checked) {
                document.getElementById('underwearVariableProduct').style.display = 'flex';
                document.getElementById('regularVariableProduct').style.display = 'none';
                document.getElementById('shoesVariableProduct').style.display = 'none';

            } else if (document.getElementById('variableshoes').checked) {
                document.getElementById('shoesVariableProduct').style.display = 'flex';
                document.getElementById('underwearVariableProduct').style.display = 'none';
                document.getElementById('regularVariableProduct').style.display = 'none';

            }else {
                document.getElementById('underwearVariableProduct').style.display = 'none';
                document.getElementById('shoesVariableProduct').style.display = 'none';
                document.getElementById('regularVariableProduct').style.display = 'flex';

            }
        } else {
            document.getElementById('variableprod').value = '0';
            document.getElementById('regularVariableProduct').style.display = 'none';
            document.getElementById('underVariableProduct').style.display = 'none';
            document.getElementById('shoeVariableProduct').style.display = 'none';
            document.getElementById('stock').style.display = 'flex';
        }



    }

    /*STANDARD SIZES*/
    $(document).ready(function() {
        $('#btnAdd').click(function() {
            var num = $('.clonedSection').length;
            var newNum = new Number(num + 1);

            var newSection = $('#clonedSection' + num).clone().attr('id', 'clonedSection' + newNum);

            newSection.children(':first').children(':first').attr('id', 'name' + newNum).attr('name', 'name' + newNum);
            newSection.children(':nth-child(2)').children(':first').attr('id', 'nameTwo' + newNum)
                .attr('name', 'nameTwo' + newNum);

            $('.cloneSection').last().append(newSection);

            $('#btnDel').attr('style', 'display:inline-block');

            if (newNum == 10)
                $('#btnAdd').attr('disabled', 'disabled');
        });

        $('#btnDel').click(function() {
            var num = $('.clonedSection').length; // how many "duplicatable" input fields we currently have
            $('#clonedSection' + num).remove(); // remove the last element

            // enable the "add" button
            $('#btnAdd').attr('disabled', '');

            // if only one element remains, disable the "remove" button
            if (num - 1 == 1)
                $('#btnDel').attr('style', 'display:none');
        });

        $('#btnDel').attr('style', 'display:none');
    });

    /*Under Wear*/
    $(document).ready(function() {
        $('#btnAdd2').click(function() {
            var num = $('.underwearSection').length;
            var newNum = new Number(num + 1);

            var newSection = $('#underwearSection' + num).clone().attr('id', 'underwearSection' + newNum);

            newSection.children(':first').children(':first').attr('id', 'name' + newNum).attr('name', 'name' + newNum);
            newSection.children(':nth-child(2)').children(':first').attr('id', 'nameTwo' + newNum)
                .attr('name', 'nameTwo' + newNum);

            $('.undersection').last().append(newSection);

            $('#btnDel2').attr('style', 'display:inline-block');

            if (newNum == 10)
                $('#btnAdd2').attr('disabled', 'disabled');
        });

        $('#btnDel2').click(function() {
            var num = $('.underwearSection').length; // how many "duplicatable" input fields we currently have
            $('#underwearSection' + num).remove(); // remove the last element

            // enable the "add" button
            $('#btnAdd2').attr('disabled', '');

            // if only one element remains, disable the "remove" button
            if (num - 1 == 1)
                $('#btnDel2').attr('style', 'display:none');
        });

        $('#btnDel2').attr('style', 'display:none');
    });

    /*Shoes*/
    $(document).ready(function () {
        $('#btnAdd3').click(function () {
            var num = $('.shoesSection').length;
            var newNum = new Number(num + 1);

            var newSection = $('#shoesSection' + num).clone().attr('id', 'shoesSection' + newNum);

            newSection.children(':first').children(':first').attr('id', 'name' + newNum).attr('name', 'name' + newNum);
            newSection.children(':nth-child(2)').children(':first').attr('id', 'nameTwo' + newNum).attr('name', 'nameTwo' + newNum);

            $('.shoeSection').last().append(newSection);

            $('#btnDel3').attr('style', 'display:inline-block');

            if (newNum == 10)
                $('#btnAdd3').attr('disabled', 'disabled');
        });

        $('#btnDel3').click(function () {
            var num = $('.shoesSection').length; // how many "duplicatable" input fields we currently have
            $('#shoesSection' + num).remove();     // remove the last element

            // enable the "add" button
            $('#btnAdd3').attr('disabled', '');

            // if only one element remains, disable the "remove" button
            if (num - 1 == 1)
                $('#btnDel3').attr('style', 'display:none');
        });

        $('#btnDel3').attr('style', 'display:none');
    });

    /*SIZES- Create JSON and send to database*/
    $(document).ready(function() {
        $('#btnSubmit').click(function () {
                        if (document.getElementById('variableproduct').checked) {

            if (document.getElementById('variableunderwear').checked) {
                var sizes = [];
                $(".activeInput").each(function() {
                    var size1 = $(this).find('[name=size1]').val();
                    var size2 = $(this).find('[name=size2]').val();
                    var stock = $(this).find('[name=stock]').val();

                    item = {}
                    item["size1"] = size1;
                    item["size2"] = size2;
                    item["stock"] = stock;

                    sizes.push(item);
                });

                sizes = JSON.stringify(sizes);
                document.getElementById("finalsizes").value = sizes;
            } else if (document.getElementById('variableshoes').checked) {
                var sizes = [];
                $(".activeInputShoes").each(function () {
                    var size1 = $(this).find('[name=size1]').val();
                    var stock = $(this).find('[name=stock]').val();

                    item = {}
                    item["size1"] = size1;
                    item["stock"] = stock;

                    sizes.push(item);
                });

                sizes = JSON.stringify(sizes);
                document.getElementById("finalsizes").value = sizes;
            }else {
                var sizes = [];
                $(".activeInputSize").each(function() {
                    var size1 = $(this).find('[name=size1]').val();
                    var stock = $(this).find('[name=stock]').val();

                    item = {}
                    item["size1"] = size1;
                    item["stock"] = stock;

                    sizes.push(item);
                });

                sizes = JSON.stringify(sizes);
                document.getElementById("finalsizes").value = sizes;
            }
}
        });
    });

         /*ADD/REMOVE COLOR FIELDS*/
        function colorVariable()
        {
            if (document.getElementById('colorvariable').checked)
            {
                document.getElementById('variableprod').value = '1';
                document.getElementById('colorVariableProduct').style.display = 'flex';

            } else {
                document.getElementById('variableprod').value = '0';
                document.getElementById('colorVariableProduct').style.display = 'none';

            }

        }

       /*COLOR VARIANTS*/
        $(document).ready(function() {
            $('#btnAddcolor').click(function() {
                var num     = $('.colorSection').length;
                var newNum  = new Number(num + 1);

                var newSection = $('#colorSection' + num).clone().attr('id', 'colorSection' + newNum);

                newSection.children(':first').children(':first').attr('id', 'name' + newNum).attr('name', 'name' + newNum);
                newSection.children(':nth-child(2)').children(':first').attr('id', 'nameTwo' + newNum).attr('name', 'nameTwo' + newNum);

                $('.clrSection').last().append(newSection);

                $('#btnDelcolor').attr('style', 'display:inline-block');

                if (newNum == 10)
                    $('#btnAddcolor').attr('disabled','disabled');
            });

            $('#btnDelcolor').click(function() {
                var num = $('.colorSection').length; // how many "duplicatable" input fields we currently have
                $('#colorSection' + num).remove();     // remove the last element

                // enable the "add" button
                $('#btnAddcolor').attr('disabled','');

                // if only one element remains, disable the "remove" button
                if (num-1 == 1)
                    $('#btnDelcolor').attr('style','display:none');
            });

            $('#btnDelcolor').attr('style','display:none');
        });


        /*COLORS - Create JSON and send to database*/
        $(document).ready(function () {
            $('#btnSubmit').click(function () {
                if (document.getElementById('colorvariable').checked) {
                    var colors = [];
                    $(".colorInput").each(function () {
                        var color = $(this).find('[name=color]').val();

                        item = {}
                        item["color"] = color;

                        colors.push(item);
                    });

                    colors = JSON.stringify(colors);

                    document.getElementById("finalcolors").value = colors;
                } else {
                    document.getElementById("finalcolors").value = "";
                }
                });

            });

    /*GET COLORS from database*/
    if ('@colors' != "") {
        document.getElementById('colorvariable').checked = true;
        colorVariable();

        var j = '@Html.Raw(colors)';
        var json = $.parseJSON(j);
        var countofsize = json.length;
        var inputs = "";
        $(json).each(function (i, val) {
        if (val.color != null) {
            inputs = "colors";
        }
        });
        clonesection(countofsize, inputs);

        var counter = 1;
        $(json).each(function (i, val) {
            console.log(val.color);
                document.getElementById('colorvariable').checked = true;
                colorVariable();
                document.getElementById('colorSection' + counter.toString()).getElementsByClassName('text-box')[0]
                    .value = val.color;
                counter++;
        });


    }

</script>

