
@model Cms.Models.ProductModel

@{
    Layout = "~/Views/Shared/_LayoutCms.cshtml";
    ViewBag.Title = "Pridať produkt";
}
<style>
    .sidenav > a:nth-child(3) {
        border-left: 5px solid #00abe8;
        color: #f1f1f1;
        background-color: #464646;
    }

    .dropdown-container2 {
        display: block;
    }
</style>
<link rel="stylesheet" href="~/Content/jquery-multiselect.css" />

<h2>Pridať produkt</h2>

@using (Html.BeginForm("SaveProduct", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Názov produktu</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Názov" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Titulná fotografia</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12 btnvyber">
                        <a id="btn_vis" style="cursor:pointer">Vyber fotografie</a>
                        @Html.TextBoxFor(model => model.TitleImage, "", new { @type = "file", @class = "form-control", @accept = "jpg|png|jpeg|gif", @style = "max-width: 67%;height:60px;display:none;", @id = "bttn", @onchange = "pressed()" })
                        <label id="fileLabel">Nie je vybratá žiadna fotografia.</label>
                        @Html.ValidationMessageFor(model => model.TitleImage, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Kategória</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        
                        @Html.EditorFor(model => model.Category, "", new { htmlAttributes = new { @class = "form-control d-none" } })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                       

                        <select id="categoriesMulti" name="categoriesMulti" multiple>

                            @{
                                var catsCounter = 0;
                                foreach (var cat in (IEnumerable<SelectListItem>)ViewData["kategoria"])
                                {
                                    if (catsCounter != 0)
                                    {
                                        <option value="@cat.Value">@cat.Text</option>
                                    }


                                    catsCounter++;
                                }
                            }



                        </select>

                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Druh rybolovu</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        
                        @Html.EditorFor(model => model.Type, "", new { htmlAttributes = new { @class = "form-control d-none" } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })


                        <select id="typesMulti" name="typesMulti" multiple>

                            @{
                                var typesCounter = 0;
                                foreach (var type in (IEnumerable<SelectListItem>)ViewData["zaradenie"])
                                {
                                    if (typesCounter != 0)
                                    {
                                        <option value="@type.Value">@type.Text</option>
                                    }


                                    typesCounter++;
                                }
                            }

                        </select>

                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Výrobca</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Custom3, (IEnumerable<SelectListItem>)ViewData["znacka"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Custom3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <!--
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Výkon</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Custom9, new { htmlAttributes = new { @class = "form-control", placeholder = "Výkon (kW)" } })
                        @Html.ValidationMessageFor(model => model.Custom9, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Plocha</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Custom10, new { htmlAttributes = new { @class = "form-control", placeholder = "Plocha (m2)" } })
                        @Html.ValidationMessageFor(model => model.Custom10, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Farebné varianty?</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="checkbox" name="colorvariable" id="colorvariable" value="" style="margin-top: 10px;" onclick="colorVariable();">
                    </div>
                </div>
            </div>
        </div>


        <div id="colorVariableProduct" class="row clrSection" style="display: none;">

            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Dostupné farebné varianty</strong>
                <a id="btnAddcolor"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDelcolor"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>

            <div id="colorSection1" class="colorSection row m-0 activeInputColor">
                <div class="mt-1 text-right" style="width: 15px;">
                </div>
                <div class="colorInput col-4">
                    <div class="form-group">
                        <div style="width: 150px;">
                            @Html.Editor("color", new { htmlAttributes = new { @class = "form-control", placeholder = "Farebná varianta" } })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
            </div>
        </div>
             -->
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Kód produktu</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", placeholder = "Kód produktu" } })
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="stock" style="display: flex;">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Stav skladu</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", placeholder = "Sklad (ks)" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                        <small>0 - momentálne vypredané, -1 - produkt na objednávku</small>
                    </div>
                </div>
            </div>
            <div class="col-2" style="margin-left:-50px;">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Custom2, (IEnumerable<SelectListItem>)ViewData["mernaj"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Custom2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Hraničná hodnota</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Custom1, new { htmlAttributes = new { @class = "form-control", placeholder = "Hraničná hodnota skladu" } })
                        @Html.ValidationMessageFor(model => model.Custom1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Hmotnosť</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", placeholder = "Hmotnosť" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-2" style="margin-left:-50px;">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Weightunit, (IEnumerable<SelectListItem>)ViewData["hmotnostj"], new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Cena s DPH</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Cena" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        <small>Ak bude hodnota 0, pri produkte bude informácia: Cena na vyžiadanie</small>
                    </div>
                </div>
            </div>
        </div>
        <!--
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Cena od?</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.CheckBoxFor(model => model.Custom6, new { style = "margin-top: 10px;" })
                    </div>
                </div>
            </div>
        </div>
        -->
        <div class="row">
            <!--
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Akciová cena s DPH</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Discountprice, new { htmlAttributes = new { @class = "form-control", placeholder = "Akciová cena" } })
                        @Html.ValidationMessageFor(model => model.Discountprice, "", new { @class = "text-danger" })

                        <select><option>e</option><option>%</option></select>
                    </div>
                </div>
            </div>
            -->

            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Akciová cena s DPH</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Discountprice, new { htmlAttributes = new { @class = "form-control", placeholder = "Akciová cena" } })
                        @Html.ValidationMessageFor(model => model.Discountprice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-2" style="margin-left:-50px;">
                <div class="form-group">
                    <div class="col-md-12">
                        <select class="form-control valid" id="discountPriceType" name="discountPriceType">
                            <option value="eur">€</option>
                            <option value="percent">%</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Heureka ?</strong>
            </div>
            <div class="col-4 mt-1">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.CheckBoxFor(model => model.Heureka, new { @checked = "checked" })
                        @Html.ValidationMessageFor(model => model.Heureka, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Heureka darček ?</strong>
            </div>
            <div class="col-4 mt-1">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.CheckBoxFor(model => model.HeurekaDarcek, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HeurekaDarcek, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row d-none">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Heureka darček - text</strong>
            </div>
            <div class="col-4 mt-1">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.HeurekaDarcekText, new { htmlAttributes = new { @class = "form-control", placeholder = "Heureka darček - text" } })
                        @Html.ValidationMessageFor(model => model.HeurekaDarcekText, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Odporúčaný produkt ?</strong>
            </div>
            <div class="col-4 mt-1">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.CheckBoxFor(model => model.Recommended, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Recommended, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <!--
        <div class="row">
            <div class="mt-1 text-right" style="width: 180px;">
                <strong>Variabilný produkt?</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="checkbox" name="variableproduct" id="variableproduct" value="" style="margin-top: 10px;" onclick="checkVariable();">
                    </div>
                </div>
            </div>
        </div>
        -->
        <div class="row">
            <div class="mt-1 text-right" style="width: 200px;">
                <strong>Variabilný produkt?</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col-md-3">
                        <!--<input type="checkbox" name="variableproduct" id="variableproduct" value="" style="margin-top: 10px;" onclick="checkVariable();">-->
                        <input type="checkbox" name="showVariants" id="showVariants" value="" style="margin-top: 10px;">
                    </div>
                </div>
            </div>
        </div>
        <!--
        <div class="row">
            <div class="col-2" id="underVariableProduct" style="display: none;">
                <div class="mt-1 text-right" style="width: 180px;">
                    <strong>Zobraziť veľkosti podprseniek?</strong>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="checkbox" name="variableunderwear" id="variableunderwear" value="" style="margin-top: 10px;" onclick="checkVariable();">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2" id="shoeVariableProduct" style="display: none;">
                <div class="mt-1 text-right" style="width: 180px;">
                    <strong>Zobraziť veľkosti tenisiek?</strong>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="checkbox" name="variableshoes" id="variableshoes" value="" style="margin-top: 10px;" onclick="checkVariable();">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        -->
        <hr />
        <div id="univerzalVariableProduct" class="row pl-5" style="display: none;">

            @Html.HiddenFor(model => model.Variants)
            @{
                string variantsIdStr = "";
                foreach (int attrId in (List<int>)ViewData["vlastnostiId"])
                {
                    variantsIdStr += attrId.ToString() + ",";
                }
                @Html.Hidden("attributesId", variantsIdStr);
            }

            <div class="mt-1 pb-3 row col-12">
                <strong>Varianty</strong>
                <a id="btnAddVar"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><!--<a id="btnDelVar"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>-->
            </div>

            <div num="1" class="clonedVarSection row m-0 activeInputSize" style="width:90%;">
                @Html.Hidden("varNum1", 1, new { @class = "varNum" })
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 10px;">
                            @Html.DropDownList("varAttrs1", (IEnumerable<SelectListItem>)ViewData["vlastnosti"], new { @class = "form-control varAttrs" })
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 10px;">
                            <select class="form-control varAttrsValues " id="varAttrsValues1" name="varAttrsValues1">
                            </select>
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 10px;">
                            @Html.Editor("varNumber1", new { htmlAttributes = new { @class = "form-control varNumber", placeholder = "Katalógové číslo" } })
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 10px;">
                            @Html.Editor("varStock1", new { htmlAttributes = new { @class = "form-control varStock", placeholder = "Na sklade" } })
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 10px;">
                            @Html.Editor("varPrice1", new { htmlAttributes = new { @class = "form-control varPrice", placeholder = "Cena s DPH" } })
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 10px;">
                            @Html.Editor("varDiscountPrice1", new { htmlAttributes = new { @class = "form-control varDiscountPrice", placeholder = "Akciová cena s DPH" } })
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="form-group">
                        <div style="width: 75px;">
                            <select class="form-control valid varDiscountPriceType" name="varDiscountPriceType">
                                <option value="eur">€</option>
                                <option value="percent">%</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="">
                    <a class="btnDelVar" style="display:none;"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 10px;margin-top: 5px;" /></a>
                </div>
            </div>
        </div>
        <!--
        <div id="regularVariableProduct" class="row cloneSection pl-5" style="display: none;">

            <div class="mt-1 pb-3 row col-12">
                <strong>Dostupné veľkosti / varianty</strong>
                <a id="btnAdd"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDel"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>

            <div id="clonedSection1" class="clonedSection row m-0 activeInputSize" style="width: 800px;">
                <div class="clonedInput">
                    <div class="form-group">
                        <div style="width: 150px;">
                            @Html.DropDownList("size1", (IEnumerable<SelectListItem>)ViewData["velkost"], new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="clonedInputTwo">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("stock", new { htmlAttributes = new { @class = "form-control", placeholder = "Ks na sklade" } })
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div id="shoesVariableProduct" class="row shoeSection pl-5" style="display: none;">

            <div class="mt-1 pb-3 row col-12">
                <strong>Dostupné veľkosti / varianty</strong>
                <a id="btnAdd3"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDel3"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>

            <div id="shoesSection1" class="shoesSection row m-0 activeInputShoes" style="width: 800px;">
                <div class="shoesInput">
                    <div class="form-group">
                        <div style="width: 150px;">
                            @Html.DropDownList("size1", (IEnumerable<SelectListItem>)ViewData["shoes"], new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="shoesInputTwo">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("stock", new { htmlAttributes = new { @class = "form-control", placeholder = "Ks na sklade" } })
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div id="underwearVariableProduct" class="row undersection pl-5" style="display: none;">

            <div class="mt-1 pb-3 row col-12">
                <strong>Dostupné veľkosti / varianty</strong>
                <a id="btnAdd2"><img style="cursor:pointer;margin-left: 10px" src="~/Content/images/plus.svg" width="25" /></a><a id="btnDel2"><img src="~/Content/images/negative.svg" width="25" style="cursor:pointer;margin-left: 5px" /></a>
            </div>
            <div id="underwearSection1" class="underwearSection row m-0 activeInput" style="width: 800px;">
                <div class="underwearInput">
                    <div class="form-group">
                        <div style="width: 150px;">
                            @Html.DropDownList("size1", (IEnumerable<SelectListItem>)ViewData["kosiky"], new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="underwearInputTree">
                    <div class="form-group">
                        <div style="width: 150px;margin-left: 20px;">
                            @Html.DropDownList("size2", (IEnumerable<SelectListItem>)ViewData["obvod"], new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Weightunit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="underwearInputTwo">
                    <div class="form-group">
                        <div style="width: 150px; margin-left: 20px;">
                            @Html.Editor("stock", new { htmlAttributes = new { @class = "form-control", placeholder = "Ks na sklade" } })
                            @Html.ValidationMessageFor(model => model.Custom3, "", new { @class = "text-danger" })
                            <input type="hidden" value="1" id="total_chq">
                        </div>
                    </div>
                </div>
            </div>

        </div>
        -->

        <hr />
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <strong>@Html.LabelFor(model => model.Description, "Popis produktu", htmlAttributes: new { @class = "control-label col-md-2" })</strong>

                    <div class="col-md-11">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 6 })
                    </div>
                </div>
            </div>
        </div>

        <hr />
        <div class="row">
            <div class="mt-1 text-right" style="width: 205px;">
                <strong>Obrázky do fotogalérie</strong>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <div class="col btnvyber">
                        <a id="bttn_vis" style="cursor:pointer">Vyber fotografie</a>
                        @Html.TextBoxFor(model => model.ImageGallery, "", new { @type = "file", @class = "form-control", @multiple = "multiple", @accept = "jpg|png|jpeg|gif", @style = "max-width: 67%;height:60px;display:none;", @id = "btttn", @onchange = "press()" })
                        <label id="fileLabell">Nie je vybratá žiadna fotografia.</label>
                        @Html.ValidationMessageFor(model => model.ImageGallery, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        @Html.EditorFor(model => model.Custom4, new { htmlAttributes = new { @class = "form-control", placeholder = "velkossti", id = "finalsizes", style = "display:none;" } })

        @*check if is product variable 1 = variable*@
        @Html.EditorFor(model => model.Custom5, new { htmlAttributes = new { @class = "form-control", id = "variableprod", style = "display:none;", @Value = "0" } })
        @Html.EditorFor(model => model.Custom7, new { htmlAttributes = new { @class = "form-control", placeholder = "", id = "finalcolors", style = "display:none;" } })

        <div class="form-group">
            <div style="text-align:right">
                <input type="submit" value="Pridať produkt" id="btnSubmit" class="btn btn-success" />
            </div>
        </div>
    </div>
}


<script src="~/Scripts/jquery-multiselect.js"></script>
<script>
    $(document).ready(function () {

        $('#categoriesMulti').multiSelect();
        $('#typesMulti').multiSelect();

        //inicializacia hodnot pre vlastnosti
        initAttrValues(1, null);
        $(document).on("change", ".varAttrs", function () {
            initAttrValues($(this).parents(".clonedVarSection").attr("num"), $(this).find("option:selected").attr("attr_id"));
        });

        function initAttrValues(num, attrId) {

            $("select[name=varAttrsValues" + num + "] option").remove();

            $values = JSON.parse($("#varAttrs" + num + " option:selected").val());

            for ($i = 0; $i < $values.length; $i++) {
                $("#varAttrsValues" + num).append('<option value="' + $values[$i].name + '">' + $values[$i].name + '</option>')
            }

            //ak to nie je rovnake ako prvy typ varianty tak nie je mozne upravit cenu
            var attrsCount = $(".clonedVarSection");
            if (attrsCount.length > 1) {

                $firstAttrId = $(".varAttrs").eq(0).find('option:selected').attr("attr_id");

                if (attrId != null && attrId != $firstAttrId && num != 1) {
                    $(".clonedVarSection[num=" + num + "] .varPrice").val("").prop("disabled", true);
                    $(".clonedVarSection[num=" + num + "] .varDiscountPrice").val("").prop("disabled", true);
                    $(".clonedVarSection[num=" + num + "] .varDiscountPriceType").val("eur").prop("disabled", true);
                } else if (attrId != null && attrId == $firstAttrId && num != 1) {
                    $(".clonedVarSection[num=" + num + "] .varPrice").prop("disabled", false);
                    $(".clonedVarSection[num=" + num + "] .varDiscountPrice").prop("disabled", false);
                    $(".clonedVarSection[num=" + num + "] .varDiscountPriceType").prop("disabled", false);
                    }
            }
        }

        //doplnenie IDeciek pre vlastnosti
        $varCounter = 0;
        $varIdsStr = $("#attributesId").val().split(",");
        $("select.varAttrs option").each(function () {
            $(this).attr("attr_id", $varIdsStr[$varCounter]);
            $varCounter++;
        });

        $("#showVariants").click(function () {
            if ($("#showVariants").is(":checked")) {
                $("#univerzalVariableProduct").css("display", "flex");
            } else {
                $("#univerzalVariableProduct").css("display", "none");
            }
        });

        //Pridanie alebo vymazanie poslednej varianty
        $('#btnAddVar').click(function () {
            var num = $('.clonedVarSection').length;
            var newNum = new Number(num + 1);

            var prevSection = $('.clonedVarSection[num=' + num + ']');
            var newSection = $('.clonedVarSection[num=' + num + ']').clone().attr('num', newNum);

            newSection.find("input.varNum").attr("name", "varNum" + newNum).attr("id", "varNum" + newNum).val(newNum);
            newSection.find("select.varAttrs").attr("name", "varAttrs" + newNum).attr("id", "varAttrs" + newNum).val(prevSection.find("select.varAttrs").val());
            newSection.find("select.varAttrsValues").attr("name", "varAttrsValues" + newNum).attr("id", "varAttrsValues" + newNum);
            newSection.find("input.varNumber").attr("name", "varNumber" + newNum).attr("id", "varNumber" + newNum);
            newSection.find("input.varStock").attr("name", "varStock" + newNum).attr("id", "varStock" + newNum);
            newSection.find("input.varPrice").attr("name", "varPrice" + newNum).attr("id", "varPrice" + newNum);
            newSection.find("input.varDiscountPrice").attr("name", "varDiscountPrice" + newNum).attr("id", "varDiscountPrice" + newNum);

            $('#univerzalVariableProduct').append(newSection);

            $('.btnDelVar').attr('style', 'display:inline-block');

            //if (newNum == 10)
            //    $('#btnAddVar').attr('disabled', 'disabled');
        });

        $(document).on('click', '.btnDelVar', function () {

            var thisNum = $(this).parents(".clonedVarSection").attr("num");
            var num = $('.clonedVarSection').length; // how many "duplicatable" input fields we currently have

            $('.clonedVarSection[num=' + thisNum + ']').remove();     // remove the last element

            //reorder
            var tempCounter = 1;
            $('.clonedVarSection').each(function () {

                $(this).attr('num', tempCounter);

                $(this).find("input.varNum").attr("name", "varNum" + tempCounter).attr("id", "varNum" + tempCounter).val(tempCounter);
                $(this).find("select.varAttrs").attr("name", "varAttrs" + tempCounter).attr("id", "varAttrs" + tempCounter);
                $(this).find("select.varAttrsValues").attr("name", "varAttrsValues" + tempCounter).attr("id", "varAttrsValues" + tempCounter);
                $(this).find("input.varNumber").attr("name", "varNumber" + tempCounter).attr("id", "varNumber" + tempCounter);
                $(this).find("input.varStock").attr("name", "varStock" + tempCounter).attr("id", "varStock" + tempCounter);
                $(this).find("input.varPrice").attr("name", "varPrice" + tempCounter).attr("id", "varPrice" + tempCounter);
                $(this).find("input.varDiscountPrice").attr("name", "varDiscountPrice" + tempCounter).attr("id", "varDiscountPrice" + tempCounter);

                tempCounter++;
            });

            // enable the "add" button
            //$('#btnAddVar').attr('disabled', '');

            // if only one element remains, disable the "remove" button
            if (num - 1 == 1)
                $('.btnDelVar').attr('style', 'display:none');
        });

        //$('#btnDelVar').attr('style', 'display:none');

    });
</script>

<script type="text/javascript">
    // Initialize your tinyMCE Editor with your preferred options
    tinyMCE.init({
        // General options
        mode: "textareas",
        theme: "modern",
        branding: false,
        elementpath: false,
        height: 300,
        convert_fonts_to_spans: false,
        entity_encoding: "numeric",
        selector: "textarea",
        plugins:
            'print preview searchreplace autolink directionality visualblocks visualchars fullscreen link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists textcolor wordcount image contextmenu colorpicker textpattern help imagetools save insertdatetime preview media searchreplace print contextmenu paste directionality fullscreen noneditable visualchars nonbreaking template wordcount advlist autosave',
        toolbar1:
            'formatselect | bold italic strikethrough forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat | mybutton | upload',

        templates: [
            { title: 'Test template 1', content: 'Test 1' },
            { title: 'Test template 2', content: 'Test 2' }
        ],
        content_css: "/Content/Site.css",
        paste_data_images: false,
        images_upload_url: '/upload-image',
        images_upload_base_path: '/Uploads/images',
        setup: function (editor) {
            var inp = $('<input id="tinymce-uploader" type="file" name="pic" style="display:none">');
            $(editor.getElement()).parent().append(inp);

            inp.on("change",
                function () {
                    uploadFile($(this), editor);
                });

            editor.addButton('upload',
                {
                    text: "Nahrať PDF",
                    icon: false,
                    onclick: function (e) {
                        inp.trigger('click');
                    }
                });
        }
    });

    function uploadFile(inp, editor) {
        var input = inp.get(0);
        var data = new FormData();
        data.append('file', input.files[0]);

        $.ajax({
            url: '/upload-image',
            type: 'POST',
            data: data,
            processData: false, // Don't process the files
            contentType:
                false, // Set content type to false as jQuery will tell the server its a query string request
            success: function (data, textStatus, jqXHR) {
                editor.insertContent('<a target="_blank" class="content-img" href="/Uploads/images/' + data.location + '">Pomenuj svoje PDF. (Klikni pravým tlačidlom, stlač Link a uprav sekciu Text to display)</a>');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                if (jqXHR.responseText) {
                    errors = JSON.parse(jqXHR.responseText).errors
                    alert('Error uploading image: ' +
                        errors.join(", ") +
                        '. Make sure the file is an image and has extension jpg/jpeg/png.');
                }
            }
        });
    }


</script>

<script src="/Scripts/umd/popper.min.js"></script>
<script src="/Scripts/bootstrap.min.js"></script>
<!--<script src="http://malsup.github.com/jquery.form.js"></script>-->



<script>
    $("#btn_vis").click(function () {
        $("#bttn").trigger('click');
    });

    window.pressed = function () {
        var a = document.getElementById('bttn');
        if (a.files.length > 1) {
            fileLabel.innerHTML = "Boli vybraté " + a.files.length + " fotografie.";
        }
        else if (a.files.length = 1) {
            fileLabel.innerHTML = "Bola vybratá " + a.files.length + " fotografia.";
        }
    };

    $("#bttn_vis").click(function () {
        $("#btttn").trigger('click');
    });

    window.press = function () {
        var a = document.getElementById('btttn');
        if (a.files.length > 1) {
            fileLabell.innerHTML = "Boli vybraté " + a.files.length + " fotografie.";
        }
        else if (a.files.length = 1) {
            fileLabell.innerHTML = "Bola vybratá " + a.files.length + " fotografia.";
        }
    };

    function validatePrices() {
        $valid = true;

        $("#Price").val($("#Price").val().replace(",", "."));
        $("#Discountprice").val($("#Discountprice").val().replace(",", "."));

        if ($("#Price").val() == "" || !$.isNumeric($("#Price").val())) {
            $("#Price").addClass("error");

            $valid = false;
        } else {
            $("#Price").removeClass("error");

            $("#Price").val(parseFloat($("#Price").val()));
        }

        if ($("#Discountprice").val() != "" && !$.isNumeric($("#Discountprice").val())) {
            $("#Discountprice").addClass("error");

            $valid = false;
        } else {
            $("#Discountprice").removeClass("error");

            if ($("#Discountprice").val() != "") {
                $("#Discountprice").val(parseFloat($("#Discountprice").val()));
            }
        }

        if ($("#showVariants").is(":checked")) {
            $num = $(".clonedVarSection").length;

            for ($i = 1; $i <= $num; $i++) {

                $varPrice = $(".clonedVarSection[num=" + $i + "]").find(".varPrice").val();
                $varDiscountprice = $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").val();

                if ($varPrice != "" && !$.isNumeric($varPrice.replace(",", "."))) {
                    $(".clonedVarSection[num=" + $i + "]").find(".varPrice").addClass("error");

                    $valid = false;
                } else {
                    $(".clonedVarSection[num=" + $i + "]").find(".varPrice").removeClass("error");

                    if ($varPrice != "") {
                        $(".clonedVarSection[num=" + $i + "]").find(".varPrice").val(parseFloat($varPrice.replace(",", ".")));
                    }
                }

                if ($varDiscountprice != "" && !$.isNumeric($varDiscountprice.replace(",", "."))) {
                    $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").addClass("error");

                    $valid = false;
                } else {
                    $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").removeClass("error");

                    if ($varDiscountprice != "") {
                        $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").val(parseFloat($varDiscountprice.replace(",", ".")));
                    }
                }
            }
        }

        return $valid;
    }

    /*SIZES- Create JSON and send to database*/
    $(document).ready(function () {

        $('#btnSubmit').click(function (e) {

            e.preventDefault();

            //Kategorie
            $categoryArr = [];
            $("#categoriesMulti").next(".multi-select-container").find(".multi-select-menuitems label").each(function () {
              
                if ($(this).find("input").is(":checked")) {
                    $categoryArr.push(parseInt($(this).find("input").val()));
                }

            });

            $("#Category").val($categoryArr.length > 0 ? JSON.stringify($categoryArr) : "");

            //Zaradenia
            $typeArr = [];
            $("#typesMulti").next(".multi-select-container").find(".multi-select-menuitems label").each(function () {

                if ($(this).find("input").is(":checked")) {
                    $typeArr.push(parseInt($(this).find("input").val()));
                }

            });

            $("#Type").val($typeArr.length > 0 ? JSON.stringify($typeArr) : "");

            //Varianty
            if (validatePrices()) {

                if ($("#discountPriceType").val() == "percent") {
                    $discountPriceFinal = $("#Price").val() - ($("#Price").val() * $("#Discountprice").val() / 100);
                    $("#Discountprice").val($discountPriceFinal);
                }

                //ulozenie variant do JSONU ako string
                if ($("#showVariants").is(":checked")) {
                    $num = $(".clonedVarSection").length;
                    $variants = [];

                    for ($i = 1; $i <= $num; $i++) {

                        $varNum = parseInt($(".clonedVarSection[num=" + $i + "]").find(".varNum").val());
                        $varAttrs = $(".clonedVarSection[num=" + $i + "]").find(".varAttrs option:selected").attr("attr_id");
                        $varAttrsValues = $(".clonedVarSection[num=" + $i + "]").find(".varAttrsValues").val();
                        $varNumber = $(".clonedVarSection[num=" + $i + "]").find(".varNumber").val();
                        $varStock = $(".clonedVarSection[num=" + $i + "]").find(".varStock").val();
                        $varPrice = $(".clonedVarSection[num=" + $i + "]").find(".varPrice").val();
                        $varDiscountPrice = $(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").val();

                        if ($(".clonedVarSection[num=" + $i + "]").find(".varDiscountPriceType").val() == "percent") {
                            if ($varPrice != "") {
                                $discountPriceFinal = $varPrice - ($varPrice * $varDiscountPrice / 100);
                                //$(".clonedVarSection[num=" + $i + "]").find(".varDiscountPrice").val($discountPriceFinal);
                                $varDiscountPrice = $discountPriceFinal.toString();
                            } else {
                                $varDiscountPrice = "";
                            }
                        }

                        $variants.push({ "num": $varNum, "attribute_id": $varAttrs, "value": $varAttrsValues, "number": $varNumber, "stock": $varStock, "price": $varPrice, "discountprice": $varDiscountPrice });
                    }

                    $("#Variants").val(JSON.stringify($variants));
                }

                $(this).parents("form").submit();
            }
        });

        $("#HeurekaDarcek").click(function () {
            if ($("#HeurekaDarcek").is(":checked")) {
                $("#HeurekaDarcekText").parents(".row").removeClass("d-none");
            } else {
                $("#HeurekaDarcekText").parents(".row").addClass("d-none");
            }
        });

    });


</script>