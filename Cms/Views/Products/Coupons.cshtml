@model Cms.Models.MultipleIndexModel
@{
    Layout = "~/Views/Shared/_LayoutCms.cshtml";
    ViewBag.Title = "Zľavové kupóny";
}
<style>
    .sidenav > a:nth-child(3) {
        border-left: 5px solid #00abe8;
        color: #f1f1f1;
        background-color: #464646;
    }

    .dropdown-container2 {
        display: block;
    }
</style>

<h2>Zľavové kupóny</h2>

<hr />

@using (Html.BeginForm("AddCoupon", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Pridať značku produktov</h4>


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-8" style="padding:0">
                @Html.EditorFor(model => model.Coupons.Coupon, new { htmlAttributes = new { @class = "form-control", placeholder = "Názov kupónu", id = "categoryname" } })
                @Html.ValidationMessageFor(model => model.Coupons.Coupon, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-8" style="padding:0">
                @Html.EditorFor(model => model.Coupons.Amount, new { htmlAttributes = new { @class = "form-control", placeholder = "Percentuálna hodnota zľavy", id = "slug" } })
                @Html.ValidationMessageFor(model => model.Coupons.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-8" style="padding:0">
                @Html.TextAreaFor(model => model.Coupons.Limit, new { @class = "form-control", placeholder = "Limit použitia kupónu (0 = neobmedzené použitie)", id = "overheslo" })
                @Html.ValidationMessageFor(model => model.Coupons.Limit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>Kategória</div>
            <div class="col-md-8" style="padding:0">
                @Html.DropDownListFor(model => model.Coupons.CategoryId, (IEnumerable<SelectListItem>)ViewData["kategoria"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Coupons.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>Druh rybolovu</div>
            <div class="col-md-8" style="padding:0">
                @Html.DropDownListFor(model => model.Coupons.TypeId, (IEnumerable<SelectListItem>)ViewData["zaradenie"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Coupons.TypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>Výrobca</div>
            <div class="col-md-8" style="padding:0">
                @Html.DropDownListFor(model => model.Coupons.BrandId, (IEnumerable<SelectListItem>)ViewData["znacka"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Coupons.BrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>Produkt</div>
            <div class="col-md-8" style="padding:0">
                @using (Html.BeginForm("SearchProductInCoupon", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "Searchform", @class = "form-inline search" }))
                {
                    @Html.Editor("term", new { htmlAttributes = new { @class = "form-control", id = "searchInCoupon", placeholder = "hľadať produkt", style = "width: 100%;border-radius: 20px; margin: 10px 5px;" } })


                }

            </div>
            @Html.HiddenFor(model => model.Coupons.ProductId)
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="Pridať kupón" class="btn btn-success submitbtn" />
            </div>
        </div>
    </div>

}
<hr />
<table class="table" id="couponsTable" style="">
    <thead>
        <tr>
            <th>Kupón</th>
            <th>Percentuálna zľava (%)</th>
            <th>Limit použitia</th>
            <th>Kategória</th>
            <th>Druh rybolovu</th>
            <th>Výrobca</th>
            <th>Produkt</th>
            <th>Kupón je aktívny?</th>
            <th style="text-align:center">Editovať / Vymazať</th>
        </tr>
    </thead>
    @if (ViewBag.Details == null)
    {
        foreach (var item in Model.CouponsModel)
        {
            <tr>
                <td><strong id="name-@item.id">@Html.DisplayFor(modelItem => item.coupon)</strong></td>
                <td id="slug-@item.id">@Html.DisplayFor(modelItem => item.amount)</td>
                <td id="des-@item.id">@Html.DisplayFor(modelItem => item.limit)</td>
                <td id="category-@item.id">@Html.DropDownList("categorySelect", (IEnumerable<SelectListItem>)ViewData["kategoria"], "", new { @class = "form-control", value = item.category_id, disabled = "disabled" })</td>
                <td id="type-@item.id">@Html.DropDownList("typeSelect", (IEnumerable<SelectListItem>)ViewData["zaradenie"], "", new { @class = "form-control", value = item.type_id, disabled = "disabled" })</td>
                <td id="brand-@item.id">@Html.DropDownList("brandSelect", (IEnumerable<SelectListItem>)ViewData["znacka"], "", new { @class = "form-control", value = item.brand_id, disabled = "disabled" })</td>
                <td>
                @{
                    var prod = Model.ProductModel.Where(o => o.id == item.product_id).SingleOrDefault();
                    if (prod != null) {
                        @prod.title;
                    }
                }
                </td>
                <td style="text-align: center;" id="active-@item.id">@Html.DisplayFor(modelItem => item.active)</td>
                <td align="center"> <button onclick="editCat(@item.id)" class="btn btn-warning" style="color: #ffffff;">Editovať</button> @Html.ActionLink(HttpUtility.HtmlDecode("&#215;"), "DeleteCoupon", new { id = item.id, confirm = true }, new { onclick = "return confirm('Naozaj chcete vymazať tento kupón?')", @class = "btn btn-danger", data_toggle = "tooltip", data_placement = "top", title = "Kliknutím nenávratne vymažete kupón." })</td>
            </tr>
            <tr id="cat-@item.id" style="display: none;">
                @using (Html.BeginForm("UpdateCoupon", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "Myform2", @class = "editCouponForm" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.EditorFor(model => model.CouponsEditModel.Id, new { htmlAttributes = new { @class = "form-control", id = "e-id-" + item.id, style = "display: none;" } })
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <td>
                        @Html.EditorFor(model => model.CouponsEditModel.Coupon, new { htmlAttributes = new { @class = "form-control", placeholder = "Názov kupónu", id = "e-name-" + item.id } })
                        @Html.ValidationMessageFor(model => model.CouponsEditModel.Coupon, "", new { @class = "text-danger" })
                    </td>
                    <td>

                        @Html.EditorFor(model => model.CouponsEditModel.Amount, new { htmlAttributes = new { @class = "form-control", placeholder = "Percentuálna hodnota zľavy", id = "e-slug-" + item.id } })
                        @Html.ValidationMessageFor(model => model.CouponsEditModel.Amount, "", new { @class = "text-danger" })

                    </td>

                    <td>
                        @Html.TextAreaFor(model => model.CouponsEditModel.Limit, new { @class = "form-control", placeholder = "Limit použitia kupónu (0 = neobmedzené použitie)", id = "e-des-" + item.id, value = item.limit })
                        @Html.ValidationMessageFor(model => model.CouponsEditModel.Limit, "", new { @class = "text-danger" })

                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.CouponsEditModel.CategoryId, (IEnumerable<SelectListItem>)ViewData["kategoria"], new { @class = "form-control", id = "e-category-" + item.id, value = item.category_id })
                        @Html.ValidationMessageFor(model => model.CouponsEditModel.CategoryId, "", new { @class = "text-danger" })

                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.CouponsEditModel.TypeId, (IEnumerable<SelectListItem>)ViewData["zaradenie"], new { @class = "form-control", id = "e-type-" + item.id, value = item.type_id })
                        @Html.ValidationMessageFor(model => model.CouponsEditModel.TypeId, "", new { @class = "text-danger" })

                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.CouponsEditModel.BrandId, (IEnumerable<SelectListItem>)ViewData["znacka"], new { @class = "form-control", id = "e-brand-" + item.id, value = item.brand_id })
                        @Html.ValidationMessageFor(model => model.CouponsEditModel.BrandId, "", new { @class = "text-danger" })

                    </td>
                    //<td>&nbsp;</td>

                    <td>
                        @Html.CheckBoxFor(model => model.CouponsEditModel.Active, new { @class = "form-control activeCouponInput", style = "width: 20px;margin: 0 auto;", id = "e-active-" + item.id, value = item.active })
                        @Html.ValidationMessageFor(model => model.CouponsEditModel.Active, "", new { @class = "text-danger" })

                    </td>
                    <td>
                        <div>
                            <input type="submit" value="Aktualizovať kupón" class="btn btn-success updateCouponSubmit" />
                        </div>
                    </td>


                }
            </tr>
        }
    }


</table>

<script>

    $(document).ready(function () {
        $('#couponsTable').DataTable({
            "order": [0, 'desc'],
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.10.19/i18n/Slovak.json"
            }
        });
    });

    function editCat(id) {
        if (document.getElementById("cat-" + id + "").style.display == "none") {
            document.getElementById("cat-" + id + "").style.display = "table-row";
        } else {
            document.getElementById("cat-" + id + "").style.display = "none";
        }

        var name = document.getElementById("name-" + id + "").innerHTML;
        var slug = document.getElementById("slug-" + id + "").innerHTML;
        var des = document.getElementById("des-" + id + "").innerHTML;
        var cat = $("#category-" + id + " select").val();
        var type = $("#type-" + id + " select").val();
        var brand = $("#brand-" + id + " select").val();
        var active = $("#active-" + id + " input").is(":checked");
        document.getElementById("e-name-" + id + "").value = name;
        document.getElementById("e-slug-" + id + "").value = slug;
        document.getElementById("e-des-" + id + "").value = des;
        document.getElementById("e-id-" + id + "").value = id;
        document.getElementById("e-category-" + id + "").value = cat;
        document.getElementById("e-type-" + id + "").value = type;
        document.getElementById("e-brand-" + id + "").value = brand;
        $("#e-active-" + id + "").prop("checked", active);
    }

</script>

<script type="text/javascript">
    $(document).ready(function () {

        //init
        $("select[name=categorySelect]").each(function () {
            $val = $(this).attr("value");
            $(this).val($val);
        });

        $("select[name=typeSelect]").each(function () {
            $val = $(this).attr("value");
            $(this).val($val);
        });


        $("select[name=brandSelect]").each(function () {
            $val = $(this).attr("value");
            $(this).val($val);
        });
           
        $(".activeCouponInput").click(function () {
            if ($(this).is(":checked")) {
                $(this).attr("value", "True");
            } else {
                $(this).attr("value", "False");
            }
        });

        $(document).on("click", ".chosenProd", function () {
            $("#searchInCoupon").val($(this).attr("name"));
            $("#Coupons_ProductId").val($(this).attr("value"));
        });
        
        $('#searchInCoupon').autocomplete({
            minLength: 2,
            source: '/hladat',
            select: function (event, ui) {
                $("#project").val(ui.item.label);
                $("#project-id").val(ui.item.value);
                $("#project-description").html(ui.item.desc);
                $("#project-icon").attr("src", "images/" + ui.item.icon);

                return false;
            }
        })
        .autocomplete("instance")._renderItem = function (ul, item) {
            let cena = item.price + "€";
            if (item.price == "0") {
                cena = "Cena na vyžiadanie";
            }
            return $("<li>")
                .append("<div><a name='" + item.title + "' value='" + item.id + "' class='chosenProd'><div style='width: 20%;display: inline-block;vertical-align: top;'><img src='/Uploads/" + item.image + "' width='50'></div><div style='width: 75%;display: inline-block;margin-left:10px;text-align:left;font-size: 14px;'><strong>" + item.title + "</strong><br><span style='font-size: 12px;'>" + cena + "</span></div></a></div>")
                .appendTo(ul);
        };
            
    });
</script>